// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: level.proto

#include "level.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_level_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GhostData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GhostTimer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IntPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LevelListItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LightState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RankItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SkillState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SlowState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TimerID2floatTimes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TreasureChestState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GhostState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LightData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TreasureChestData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PosRot;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_LevelDataRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_level_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_LevelState;
}  // namespace protobuf_level_2eproto
namespace protobuf_syncMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_syncMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Float3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_syncMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Float4;
}  // namespace protobuf_syncMessage_2eproto
namespace TCCamp {
class LevelListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelListReq>
      _instance;
} _LevelListReq_default_instance_;
class LevelListItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelListItem>
      _instance;
} _LevelListItem_default_instance_;
class LevelListRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelListRsp>
      _instance;
} _LevelListRsp_default_instance_;
class LevelDetailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelDetailReq>
      _instance;
} _LevelDetailReq_default_instance_;
class LevelDetailRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelDetailRsp>
      _instance;
} _LevelDetailRsp_default_instance_;
class GhostDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GhostData>
      _instance;
} _GhostData_default_instance_;
class TreasureChestDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TreasureChestData>
      _instance;
} _TreasureChestData_default_instance_;
class LightDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LightData>
      _instance;
} _LightData_default_instance_;
class LevelDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelDataReq>
      _instance;
} _LevelDataReq_default_instance_;
class LevelDataRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelDataRsp>
      _instance;
} _LevelDataRsp_default_instance_;
class LevelStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelStart>
      _instance;
} _LevelStart_default_instance_;
class LevelSettleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelSettleReq>
      _instance;
} _LevelSettleReq_default_instance_;
class LevelSettleRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelSettleRsp>
      _instance;
} _LevelSettleRsp_default_instance_;
class RankReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankReq>
      _instance;
} _RankReq_default_instance_;
class RankItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankItem>
      _instance;
} _RankItem_default_instance_;
class RankRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankRsp>
      _instance;
} _RankRsp_default_instance_;
class PosRotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PosRot>
      _instance;
} _PosRot_default_instance_;
class GhostStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GhostState>
      _instance;
} _GhostState_default_instance_;
class IntPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntPair>
      _instance;
} _IntPair_default_instance_;
class TimerID2floatTimesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimerID2floatTimes>
      _instance;
} _TimerID2floatTimes_default_instance_;
class TreasureChestStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TreasureChestState>
      _instance;
} _TreasureChestState_default_instance_;
class LightStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LightState>
      _instance;
} _LightState_default_instance_;
class SkillStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SkillState>
      _instance;
} _SkillState_default_instance_;
class SlowStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SlowState>
      _instance;
} _SlowState_default_instance_;
class GhostTimerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GhostTimer>
      _instance;
} _GhostTimer_default_instance_;
class LevelStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelState>
      _instance;
} _LevelState_default_instance_;
class ReconnectPkgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReconnectPkg>
      _instance;
} _ReconnectPkg_default_instance_;
class ServerSaveFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerSaveFile>
      _instance;
} _ServerSaveFile_default_instance_;
}  // namespace TCCamp
namespace protobuf_level_2eproto {
static void InitDefaultsLevelListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelListReq_default_instance_;
    new (ptr) ::TCCamp::LevelListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelListReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelListReq}, {}};

static void InitDefaultsLevelListItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelListItem_default_instance_;
    new (ptr) ::TCCamp::LevelListItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelListItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelListItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelListItem}, {}};

static void InitDefaultsLevelListRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelListRsp_default_instance_;
    new (ptr) ::TCCamp::LevelListRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelListRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LevelListRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLevelListRsp}, {
      &protobuf_level_2eproto::scc_info_LevelListItem.base,}};

static void InitDefaultsLevelDetailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelDetailReq_default_instance_;
    new (ptr) ::TCCamp::LevelDetailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelDetailReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelDetailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelDetailReq}, {}};

static void InitDefaultsLevelDetailRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelDetailRsp_default_instance_;
    new (ptr) ::TCCamp::LevelDetailRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelDetailRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelDetailRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelDetailRsp}, {}};

static void InitDefaultsGhostData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_GhostData_default_instance_;
    new (ptr) ::TCCamp::GhostData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::GhostData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GhostData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGhostData}, {}};

static void InitDefaultsTreasureChestData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_TreasureChestData_default_instance_;
    new (ptr) ::TCCamp::TreasureChestData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::TreasureChestData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TreasureChestData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTreasureChestData}, {
      &protobuf_syncMessage_2eproto::scc_info_Float3.base,}};

static void InitDefaultsLightData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LightData_default_instance_;
    new (ptr) ::TCCamp::LightData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LightData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LightData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLightData}, {
      &protobuf_syncMessage_2eproto::scc_info_Float3.base,}};

static void InitDefaultsLevelDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelDataReq_default_instance_;
    new (ptr) ::TCCamp::LevelDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelDataReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelDataReq}, {}};

static void InitDefaultsLevelDataRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelDataRsp_default_instance_;
    new (ptr) ::TCCamp::LevelDataRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelDataRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_LevelDataRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsLevelDataRsp}, {
      &protobuf_syncMessage_2eproto::scc_info_Float3.base,
      &protobuf_level_2eproto::scc_info_GhostData.base,
      &protobuf_level_2eproto::scc_info_TreasureChestData.base,
      &protobuf_level_2eproto::scc_info_LightData.base,}};

static void InitDefaultsLevelStart() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelStart_default_instance_;
    new (ptr) ::TCCamp::LevelStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelStart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelStart =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelStart}, {}};

static void InitDefaultsLevelSettleReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelSettleReq_default_instance_;
    new (ptr) ::TCCamp::LevelSettleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelSettleReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelSettleReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelSettleReq}, {}};

static void InitDefaultsLevelSettleRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelSettleRsp_default_instance_;
    new (ptr) ::TCCamp::LevelSettleRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelSettleRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LevelSettleRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLevelSettleRsp}, {}};

static void InitDefaultsRankReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RankReq_default_instance_;
    new (ptr) ::TCCamp::RankReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RankReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RankReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRankReq}, {}};

static void InitDefaultsRankItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RankItem_default_instance_;
    new (ptr) ::TCCamp::RankItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RankItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RankItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRankItem}, {}};

static void InitDefaultsRankRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RankRsp_default_instance_;
    new (ptr) ::TCCamp::RankRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RankRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RankRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRankRsp}, {
      &protobuf_level_2eproto::scc_info_RankItem.base,}};

static void InitDefaultsPosRot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PosRot_default_instance_;
    new (ptr) ::TCCamp::PosRot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PosRot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PosRot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPosRot}, {
      &protobuf_syncMessage_2eproto::scc_info_Float3.base,
      &protobuf_syncMessage_2eproto::scc_info_Float4.base,}};

static void InitDefaultsGhostState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_GhostState_default_instance_;
    new (ptr) ::TCCamp::GhostState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::GhostState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GhostState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGhostState}, {
      &protobuf_level_2eproto::scc_info_PosRot.base,}};

static void InitDefaultsIntPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_IntPair_default_instance_;
    new (ptr) ::TCCamp::IntPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::IntPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntPair}, {}};

static void InitDefaultsTimerID2floatTimes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_TimerID2floatTimes_default_instance_;
    new (ptr) ::TCCamp::TimerID2floatTimes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::TimerID2floatTimes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TimerID2floatTimes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimerID2floatTimes}, {}};

static void InitDefaultsTreasureChestState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_TreasureChestState_default_instance_;
    new (ptr) ::TCCamp::TreasureChestState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::TreasureChestState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TreasureChestState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTreasureChestState}, {}};

static void InitDefaultsLightState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LightState_default_instance_;
    new (ptr) ::TCCamp::LightState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LightState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LightState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLightState}, {}};

static void InitDefaultsSkillState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SkillState_default_instance_;
    new (ptr) ::TCCamp::SkillState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SkillState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SkillState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSkillState}, {}};

static void InitDefaultsSlowState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SlowState_default_instance_;
    new (ptr) ::TCCamp::SlowState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SlowState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SlowState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSlowState}, {}};

static void InitDefaultsGhostTimer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_GhostTimer_default_instance_;
    new (ptr) ::TCCamp::GhostTimer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::GhostTimer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GhostTimer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGhostTimer}, {}};

static void InitDefaultsLevelState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_LevelState_default_instance_;
    new (ptr) ::TCCamp::LevelState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::LevelState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_LevelState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsLevelState}, {
      &protobuf_level_2eproto::scc_info_PosRot.base,
      &protobuf_level_2eproto::scc_info_GhostState.base,
      &protobuf_level_2eproto::scc_info_TreasureChestState.base,
      &protobuf_level_2eproto::scc_info_SkillState.base,
      &protobuf_level_2eproto::scc_info_LightState.base,
      &protobuf_level_2eproto::scc_info_IntPair.base,
      &protobuf_level_2eproto::scc_info_TimerID2floatTimes.base,
      &protobuf_level_2eproto::scc_info_SlowState.base,
      &protobuf_level_2eproto::scc_info_GhostTimer.base,}};

static void InitDefaultsReconnectPkg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ReconnectPkg_default_instance_;
    new (ptr) ::TCCamp::ReconnectPkg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ReconnectPkg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ReconnectPkg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReconnectPkg}, {
      &protobuf_level_2eproto::scc_info_LevelDataRsp.base,
      &protobuf_level_2eproto::scc_info_LevelState.base,}};

static void InitDefaultsServerSaveFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ServerSaveFile_default_instance_;
    new (ptr) ::TCCamp::ServerSaveFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ServerSaveFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerSaveFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerSaveFile}, {
      &protobuf_level_2eproto::scc_info_LevelState.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LevelListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelListItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelListRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelDetailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelDetailRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GhostData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TreasureChestData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LightData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelDataRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelStart.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelSettleReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelSettleRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RankReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RankItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RankRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PosRot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GhostState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimerID2floatTimes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TreasureChestState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LightState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SkillState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SlowState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GhostTimer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReconnectPkg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerSaveFile.base);
}

::google::protobuf::Metadata file_level_metadata[28];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListItem, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListItem, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListRsp, resultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelListRsp, levellist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailReq, levelid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, resultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, ghostquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, gargoylequantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, treasurechestquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, ghostspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, playerspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, playerhp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDetailRsp, limittime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostData, birthpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostData, waypoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostData, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostData, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostData, attack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestData, beopened_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestData, itemidlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestData, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LightData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LightData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LightData, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataReq, levelid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, resultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, gargoyleposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, ghosts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, treasurechest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, playerspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, playerhp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, slowtrap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, spikestrap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelDataRsp, limittime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelStart, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleReq, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleReq, killghost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleReq, spendtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleReq, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleReq, win_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleRsp, resultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelSettleRsp, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankReq, page_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankItem, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankItem, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankItem, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankItem, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankRsp, resultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankRsp, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankRsp, playerrank_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PosRot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PosRot, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PosRot, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, ghosttransform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, nextwaypoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, attack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, issolving_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, solvethreshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostState, isghostactive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::IntPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::IntPair, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::IntPair, b_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TimerID2floatTimes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TimerID2floatTimes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TimerID2floatTimes, timecal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TimerID2floatTimes, timeinterval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestState, isopened_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::TreasureChestState, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LightState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LightState, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LightState, ison_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LightState, elapsedtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SkillState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SkillState, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SkillState, isactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SkillState, coldtimeleft_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SlowState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SlowState, slowspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SlowState, lefttime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostTimer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostTimer, ghostid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostTimer, lefttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GhostTimer, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, killghost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, timeduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, playertransform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, playerhp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, ghoststatelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, treasurecheststatelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, skillstatelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, lightstatelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, ghostsendbackadmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, deactivetimerid2ghostid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, sponcetimerid2ghostid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, timerid2times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, playerslowstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::LevelState, ghosttimerlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ReconnectPkg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ReconnectPkg, leveldata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ReconnectPkg, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ServerSaveFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ServerSaveFile, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ServerSaveFile, save_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ServerSaveFile, spendtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ServerSaveFile, savetime_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TCCamp::LevelListReq)},
  { 6, -1, sizeof(::TCCamp::LevelListItem)},
  { 13, -1, sizeof(::TCCamp::LevelListRsp)},
  { 20, -1, sizeof(::TCCamp::LevelDetailReq)},
  { 27, -1, sizeof(::TCCamp::LevelDetailRsp)},
  { 43, -1, sizeof(::TCCamp::GhostData)},
  { 54, -1, sizeof(::TCCamp::TreasureChestData)},
  { 63, -1, sizeof(::TCCamp::LightData)},
  { 70, -1, sizeof(::TCCamp::LevelDataReq)},
  { 77, -1, sizeof(::TCCamp::LevelDataRsp)},
  { 94, -1, sizeof(::TCCamp::LevelStart)},
  { 100, -1, sizeof(::TCCamp::LevelSettleReq)},
  { 111, -1, sizeof(::TCCamp::LevelSettleRsp)},
  { 118, -1, sizeof(::TCCamp::RankReq)},
  { 125, -1, sizeof(::TCCamp::RankItem)},
  { 135, -1, sizeof(::TCCamp::RankRsp)},
  { 143, -1, sizeof(::TCCamp::PosRot)},
  { 150, -1, sizeof(::TCCamp::GhostState)},
  { 165, -1, sizeof(::TCCamp::IntPair)},
  { 172, -1, sizeof(::TCCamp::TimerID2floatTimes)},
  { 180, -1, sizeof(::TCCamp::TreasureChestState)},
  { 187, -1, sizeof(::TCCamp::LightState)},
  { 195, -1, sizeof(::TCCamp::SkillState)},
  { 203, -1, sizeof(::TCCamp::SlowState)},
  { 210, -1, sizeof(::TCCamp::GhostTimer)},
  { 218, -1, sizeof(::TCCamp::LevelState)},
  { 238, -1, sizeof(::TCCamp::ReconnectPkg)},
  { 245, -1, sizeof(::TCCamp::ServerSaveFile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelListItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelDetailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelDetailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_GhostData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_TreasureChestData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LightData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelSettleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelSettleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RankReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RankItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RankRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PosRot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_GhostState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_IntPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_TimerID2floatTimes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_TreasureChestState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LightState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SkillState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SlowState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_GhostTimer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_LevelState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ReconnectPkg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ServerSaveFile_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "level.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013level.proto\022\006TCCamp\032\021syncMessage.proto"
      "\" \n\014LevelListReq\022\020\n\010PlayerID\030\001 \001(\t\".\n\rLe"
      "velListItem\022\017\n\007LevelID\030\001 \001(\005\022\014\n\004Name\030\002 \001"
      "(\t\"L\n\014LevelListRsp\022\022\n\nResultCode\030\001 \001(\005\022("
      "\n\tLevelList\030\002 \003(\0132\025.TCCamp.LevelListItem"
      "\"3\n\016LevelDetailReq\022\020\n\010PlayerID\030\001 \001(\t\022\017\n\007"
      "LevelID\030\002 \001(\005\"\361\001\n\016LevelDetailRsp\022\022\n\nResu"
      "ltCode\030\001 \001(\005\022\017\n\007LevelID\030\002 \001(\005\022\014\n\004Name\030\003 "
      "\001(\t\022\016\n\006Detail\030\004 \001(\t\022\025\n\rGhostQuantity\030\005 \001"
      "(\005\022\030\n\020GargoyleQuantity\030\006 \001(\005\022\035\n\025Treasure"
      "ChestQuantity\030\007 \001(\005\022\022\n\nGhostSpeed\030\010 \001(\001\022"
      "\023\n\013PlayerSpeed\030\t \001(\001\022\020\n\010PlayerHP\030\n \001(\005\022\021"
      "\n\tLimitTime\030\013 \001(\005\"h\n\tGhostData\022\n\n\002ID\030\001 \001"
      "(\005\022\022\n\nBirthPoint\030\002 \001(\005\022\020\n\010WayPoint\030\003 \003(\005"
      "\022\r\n\005speed\030\004 \001(\002\022\n\n\002Hp\030\005 \001(\005\022\016\n\006attack\030\006 "
      "\001(\005\"g\n\021TreasureChestData\022\n\n\002ID\030\001 \001(\005\022\020\n\010"
      "BeOpened\030\002 \001(\010\022\022\n\nItemIdList\030\003 \003(\005\022 \n\010Po"
      "sition\030\004 \001(\0132\016.TCCamp.Float3\"9\n\tLightDat"
      "a\022\n\n\002ID\030\001 \001(\005\022 \n\010Position\030\002 \001(\0132\016.TCCamp"
      ".Float3\"1\n\014LevelDataReq\022\020\n\010PlayerID\030\001 \001("
      "\t\022\017\n\007LevelID\030\002 \001(\005\"\342\002\n\014LevelDataRsp\022\022\n\nR"
      "esultCode\030\001 \001(\005\022\017\n\007LevelID\030\002 \001(\005\022\014\n\004Name"
      "\030\003 \001(\t\022(\n\020GargoylePosition\030\004 \003(\0132\016.TCCam"
      "p.Float3\022!\n\006Ghosts\030\005 \003(\0132\021.TCCamp.GhostD"
      "ata\0220\n\rTreasureChest\030\006 \003(\0132\031.TCCamp.Trea"
      "sureChestData\022\023\n\013PlayerSpeed\030\t \001(\001\022\020\n\010Pl"
      "ayerHP\030\n \001(\005\022 \n\005Light\030\013 \003(\0132\021.TCCamp.Lig"
      "htData\022 \n\010SlowTrap\030\014 \003(\0132\016.TCCamp.Float3"
      "\022\"\n\nSpikesTrap\030\r \003(\0132\016.TCCamp.Float3\022\021\n\t"
      "LimitTime\030\016 \001(\005\"\036\n\nLevelStart\022\020\n\010PlayerI"
      "D\030\001 \001(\t\"t\n\016LevelSettleReq\022\020\n\010PlayerID\030\001 "
      "\001(\t\022\017\n\007LevelID\030\002 \001(\005\022\021\n\tKillGhost\030\003 \001(\005\022"
      "\021\n\tSpendTime\030\004 \001(\002\022\014\n\004Gold\030\005 \001(\005\022\013\n\003Win\030"
      "\006 \001(\010\"3\n\016LevelSettleRsp\022\022\n\nResultCode\030\001 "
      "\001(\005\022\r\n\005Score\030\003 \001(\005\")\n\007RankReq\022\020\n\010PlayerI"
      "D\030\001 \001(\t\022\014\n\004page\030\002 \001(\005\"U\n\010RankItem\022\014\n\004Ran"
      "k\030\001 \001(\005\022\020\n\010PlayerID\030\002 \001(\t\022\014\n\004Name\030\003 \001(\t\022"
      "\014\n\004Gold\030\004 \001(\005\022\r\n\005Score\030\005 \001(\005\"c\n\007RankRsp\022"
      "\022\n\nResultCode\030\001 \001(\005\022\036\n\004Rank\030\002 \003(\0132\020.TCCa"
      "mp.RankItem\022$\n\nPlayerRank\030\003 \001(\0132\020.TCCamp"
      ".RankItem\"L\n\006PosRot\022 \n\010Position\030\001 \001(\0132\016."
      "TCCamp.Float3\022 \n\010Rotation\030\002 \001(\0132\016.TCCamp"
      ".Float4\"\321\001\n\nGhostState\022\n\n\002ID\030\001 \001(\005\022&\n\016Gh"
      "ostTransform\030\002 \001(\0132\016.TCCamp.PosRot\022\024\n\014Ne"
      "xtWayPoint\030\003 \001(\005\022\n\n\002Hp\030\004 \001(\005\022\016\n\006Attack\030\005"
      " \001(\005\022\r\n\005Speed\030\006 \001(\002\022\014\n\004Mode\030\007 \001(\005\022\021\n\tIsS"
      "olving\030\010 \001(\010\022\026\n\016solveThreshold\030\t \001(\002\022\025\n\r"
      "IsGhostActive\030\n \001(\010\"\037\n\007IntPair\022\t\n\001a\030\001 \001("
      "\005\022\t\n\001b\030\002 \001(\005\"G\n\022TimerID2floatTimes\022\n\n\002ID"
      "\030\001 \001(\005\022\017\n\007TimeCal\030\002 \001(\002\022\024\n\014TimeInterval\030"
      "\003 \001(\002\"2\n\022TreasureChestState\022\020\n\010isOpened\030"
      "\001 \001(\010\022\n\n\002ID\030\002 \001(\005\";\n\nLightState\022\n\n\002ID\030\001 "
      "\001(\005\022\014\n\004IsOn\030\002 \001(\010\022\023\n\013ElapsedTime\030\003 \001(\002\"@"
      "\n\nSkillState\022\n\n\002ID\030\001 \001(\005\022\020\n\010IsActive\030\002 \001"
      "(\010\022\024\n\014ColdTimeLeft\030\003 \001(\002\"0\n\tSlowState\022\021\n"
      "\tSlowSpeed\030\002 \001(\002\022\020\n\010LeftTime\030\003 \001(\002\"=\n\nGh"
      "ostTimer\022\017\n\007GhostID\030\001 \001(\005\022\020\n\010LeftTime\030\002 "
      "\001(\002\022\014\n\004type\030\003 \001(\005\"\333\004\n\nLevelState\022\021\n\tKill"
      "Ghost\030\001 \001(\005\022\024\n\014TimeDuration\030\002 \001(\002\022\'\n\017Pla"
      "yerTransform\030\003 \001(\0132\016.TCCamp.PosRot\022\020\n\010Pl"
      "ayerHP\030\004 \001(\005\022*\n\016GhostStateList\030\005 \003(\0132\022.T"
      "CCamp.GhostState\022:\n\026TreasureChestStateLi"
      "st\030\006 \003(\0132\032.TCCamp.TreasureChestState\022*\n\016"
      "SkillStateList\030\007 \003(\0132\022.TCCamp.SkillState"
      "\022*\n\016LightStateList\030\010 \003(\0132\022.TCCamp.LightS"
      "tate\022+\n\022GhostSendbackAdmin\030\t \003(\0132\017.TCCam"
      "p.IntPair\0220\n\027DeactiveTimerID2GhostID\030\n \003"
      "(\0132\017.TCCamp.IntPair\022.\n\025SponceTimerID2Gho"
      "stID\030\013 \003(\0132\017.TCCamp.IntPair\0221\n\rTimerID2T"
      "imes\030\014 \003(\0132\032.TCCamp.TimerID2floatTimes\022*"
      "\n\017PlayerSlowState\030\r \001(\0132\021.TCCamp.SlowSta"
      "te\022\017\n\007LevelID\030\016 \001(\005\022*\n\016GhostTimerList\030\017 "
      "\003(\0132\022.TCCamp.GhostTimer\"Z\n\014ReconnectPkg\022"
      "\'\n\tLevelData\030\001 \001(\0132\024.TCCamp.LevelDataRsp"
      "\022!\n\005State\030\002 \001(\0132\022.TCCamp.LevelState\"h\n\016S"
      "erverSaveFile\022\017\n\007LevelID\030\001 \001(\005\022 \n\004save\030\002"
      " \001(\0132\022.TCCamp.LevelState\022\021\n\tSpendTime\030\003 "
      "\001(\005\022\020\n\010SaveTime\030\004 \001(\003*\365\001\n\020CLIENT_LEVEL_C"
      "MD\022\030\n\024CLIENT_LEVEL_INVALID\020\000\022\032\n\025CLIENT_L"
      "EVEL_LIST_REQ\020\220N\022\034\n\027CLIENT_LEVEL_DETAIL_"
      "REQ\020\221N\022\032\n\025CLIENT_LEVEL_DATA_REQ\020\222N\022\027\n\022CL"
      "IENT_LEVEL_START\020\223N\022\034\n\027CLIENT_LEVEL_SETT"
      "LE_REQ\020\224N\022\032\n\025CLIENT_LEVEL_RANK_REQ\020\225N\022\036\n"
      "\031CLIENT_LEVEL_UPDATE_STATE\020\226N*\337\001\n\020SERVER"
      "_LEVEL_CMD\022\030\n\024SERVER_LEVEL_INVALID\020\000\022\033\n\025"
      "SERVER_LEVEL_LIST_RSP\020\240\234\001\022\035\n\027SERVER_LEVE"
      "L_DETAIL_RSP\020\241\234\001\022\033\n\025SERVER_LEVEL_DATA_RS"
      "P\020\242\234\001\022\035\n\027SERVER_LEVEL_SETTLE_RSP\020\243\234\001\022\033\n\025"
      "SERVER_LEVEL_RANK_RSP\020\244\234\001\022\034\n\026SERVER_LEVE"
      "L_RECONNECT\020\245\234\001*\177\n\026LEVEL_LIST_RESULT_COD"
      "E\022\030\n\024LEVEL_LIST_RESULT_OK\020\000\022\'\n#LEVEL_LIS"
      "T_RESULT_PLAYER_NOT_ONLINE\020\001\022\"\n\036LEVEL_LI"
      "ST_RESULT_SERVER_ERROR\020\002*\260\001\n\030LEVEL_DETAI"
      "L_RESULT_CODE\022\032\n\026LEVEL_DETAIL_RESULT_OK\020"
      "\000\022\'\n#LEVEL_DETAIL_RESULT_LEVELID_ILLEGAL"
      "\020\001\022)\n%LEVEL_DETAIL_RESULT_PLAYER_NOT_ONL"
      "INE\020\002\022$\n LEVEL_DETAIL_RESULT_SERVER_ERRO"
      "R\020\003*\246\001\n\026LEVEL_DATA_RESULT_CODE\022\030\n\024LEVEL_"
      "DATA_RESULT_OK\020\000\022%\n!LEVEL_DATA_RESULT_LE"
      "VELID_ILLEGAL\020\001\022\'\n#LEVEL_DATA_RESULT_PLA"
      "YER_NOT_ONLINE\020\002\022\"\n\036LEVEL_DETA_RESULT_SE"
      "RVER_ERROR\020\003*\251\001\n\030LEVEL_SETTLE_RESULT_COD"
      "E\022\032\n\026LEVEL_SETTLE_RESULT_OK\020\000\022 \n\034LEVEL_S"
      "ETTLE_RESULT_CHEATING\020\001\022)\n%LEVEL_SETTLE_"
      "RESULT_CAN_NOT_FIND_GAME\020\002\022$\n LEVEL_SETT"
      "LE_RESULT_SERVER_ERROR\020\003*\243\001\n\026LEVEL_RANK_"
      "RESULT_CODE\022\030\n\024LEVEL_RANK_RESULT_OK\020\000\022\"\n"
      "\036LEVEL_RANK_RESULT_PAGE_ILLEGAL\020\001\022\'\n#LEV"
      "EL_RANK_RESULT_PLAYER_NOT_ONLINE\020\002\022\"\n\036LE"
      "VEL_RANK_RESULT_SERVER_ERROR\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4398);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "level.proto", &protobuf_RegisterTypes);
  ::protobuf_syncMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_level_2eproto
namespace TCCamp {
const ::google::protobuf::EnumDescriptor* CLIENT_LEVEL_CMD_descriptor() {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_level_2eproto::file_level_enum_descriptors[0];
}
bool CLIENT_LEVEL_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SERVER_LEVEL_CMD_descriptor() {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_level_2eproto::file_level_enum_descriptors[1];
}
bool SERVER_LEVEL_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 20000:
    case 20001:
    case 20002:
    case 20003:
    case 20004:
    case 20005:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LEVEL_LIST_RESULT_CODE_descriptor() {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_level_2eproto::file_level_enum_descriptors[2];
}
bool LEVEL_LIST_RESULT_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LEVEL_DETAIL_RESULT_CODE_descriptor() {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_level_2eproto::file_level_enum_descriptors[3];
}
bool LEVEL_DETAIL_RESULT_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LEVEL_DATA_RESULT_CODE_descriptor() {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_level_2eproto::file_level_enum_descriptors[4];
}
bool LEVEL_DATA_RESULT_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LEVEL_SETTLE_RESULT_CODE_descriptor() {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_level_2eproto::file_level_enum_descriptors[5];
}
bool LEVEL_SETTLE_RESULT_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LEVEL_RANK_RESULT_CODE_descriptor() {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_level_2eproto::file_level_enum_descriptors[6];
}
bool LEVEL_RANK_RESULT_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LevelListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelListReq::kPlayerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelListReq::LevelListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelListReq)
}
LevelListReq::LevelListReq(const LevelListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelListReq)
}

void LevelListReq::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LevelListReq::~LevelListReq() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelListReq)
  SharedDtor();
}

void LevelListReq::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelListReq::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelListReq& LevelListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelListReq.base);
  return *internal_default_instance();
}


void LevelListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LevelListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelListReq.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelListReq)
  return false;
#undef DO_
}

void LevelListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelListReq.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelListReq)
}

::google::protobuf::uint8* LevelListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelListReq.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelListReq)
  return target;
}

size_t LevelListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelListReq)
    MergeFrom(*source);
  }
}

void LevelListReq::MergeFrom(const LevelListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
}

void LevelListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelListReq::CopyFrom(const LevelListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelListReq::IsInitialized() const {
  return true;
}

void LevelListReq::Swap(LevelListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelListReq::InternalSwap(LevelListReq* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelListReq::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelListItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelListItem::kLevelIDFieldNumber;
const int LevelListItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelListItem::LevelListItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelListItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelListItem)
}
LevelListItem::LevelListItem(const LevelListItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  levelid_ = from.levelid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelListItem)
}

void LevelListItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelid_ = 0;
}

LevelListItem::~LevelListItem() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelListItem)
  SharedDtor();
}

void LevelListItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelListItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelListItem::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelListItem& LevelListItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelListItem.base);
  return *internal_default_instance();
}


void LevelListItem::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelListItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelid_ = 0;
  _internal_metadata_.Clear();
}

bool LevelListItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelListItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 LevelID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelListItem.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelListItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelListItem)
  return false;
#undef DO_
}

void LevelListItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelListItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 LevelID = 1;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->levelid(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelListItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelListItem)
}

::google::protobuf::uint8* LevelListItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelListItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 LevelID = 1;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->levelid(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelListItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelListItem)
  return target;
}

size_t LevelListItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelListItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 LevelID = 1;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelListItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelListItem)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelListItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelListItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelListItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelListItem)
    MergeFrom(*source);
  }
}

void LevelListItem::MergeFrom(const LevelListItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelListItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
}

void LevelListItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelListItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelListItem::CopyFrom(const LevelListItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelListItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelListItem::IsInitialized() const {
  return true;
}

void LevelListItem::Swap(LevelListItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelListItem::InternalSwap(LevelListItem* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(levelid_, other->levelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelListItem::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelListRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelListRsp::kResultCodeFieldNumber;
const int LevelListRsp::kLevelListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelListRsp::LevelListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelListRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelListRsp)
}
LevelListRsp::LevelListRsp(const LevelListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      levellist_(from.levellist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resultcode_ = from.resultcode_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelListRsp)
}

void LevelListRsp::SharedCtor() {
  resultcode_ = 0;
}

LevelListRsp::~LevelListRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelListRsp)
  SharedDtor();
}

void LevelListRsp::SharedDtor() {
}

void LevelListRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelListRsp::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelListRsp& LevelListRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelListRsp.base);
  return *internal_default_instance();
}


void LevelListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  levellist_.Clear();
  resultcode_ = 0;
  _internal_metadata_.Clear();
}

bool LevelListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelListRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ResultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.LevelListItem LevelList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_levellist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelListRsp)
  return false;
#undef DO_
}

void LevelListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // repeated .TCCamp.LevelListItem LevelList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->levellist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->levellist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelListRsp)
}

::google::protobuf::uint8* LevelListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // repeated .TCCamp.LevelListItem LevelList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->levellist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->levellist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelListRsp)
  return target;
}

size_t LevelListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.LevelListItem LevelList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->levellist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->levellist(static_cast<int>(i)));
    }
  }

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelListRsp)
    MergeFrom(*source);
  }
}

void LevelListRsp::MergeFrom(const LevelListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  levellist_.MergeFrom(from.levellist_);
  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
}

void LevelListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelListRsp::CopyFrom(const LevelListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelListRsp::IsInitialized() const {
  return true;
}

void LevelListRsp::Swap(LevelListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelListRsp::InternalSwap(LevelListRsp* other) {
  using std::swap;
  CastToBase(&levellist_)->InternalSwap(CastToBase(&other->levellist_));
  swap(resultcode_, other->resultcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelListRsp::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelDetailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelDetailReq::kPlayerIDFieldNumber;
const int LevelDetailReq::kLevelIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelDetailReq::LevelDetailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelDetailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelDetailReq)
}
LevelDetailReq::LevelDetailReq(const LevelDetailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  levelid_ = from.levelid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelDetailReq)
}

void LevelDetailReq::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelid_ = 0;
}

LevelDetailReq::~LevelDetailReq() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelDetailReq)
  SharedDtor();
}

void LevelDetailReq::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelDetailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelDetailReq::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelDetailReq& LevelDetailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelDetailReq.base);
  return *internal_default_instance();
}


void LevelDetailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelid_ = 0;
  _internal_metadata_.Clear();
}

bool LevelDetailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelDetailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelDetailReq.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LevelID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelDetailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelDetailReq)
  return false;
#undef DO_
}

void LevelDetailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDetailReq.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->levelid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelDetailReq)
}

::google::protobuf::uint8* LevelDetailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDetailReq.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->levelid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelDetailReq)
  return target;
}

size_t LevelDetailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelDetailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDetailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelDetailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelDetailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelDetailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelDetailReq)
    MergeFrom(*source);
  }
}

void LevelDetailReq::MergeFrom(const LevelDetailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
}

void LevelDetailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelDetailReq::CopyFrom(const LevelDetailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDetailReq::IsInitialized() const {
  return true;
}

void LevelDetailReq::Swap(LevelDetailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelDetailReq::InternalSwap(LevelDetailReq* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(levelid_, other->levelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelDetailReq::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelDetailRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelDetailRsp::kResultCodeFieldNumber;
const int LevelDetailRsp::kLevelIDFieldNumber;
const int LevelDetailRsp::kNameFieldNumber;
const int LevelDetailRsp::kDetailFieldNumber;
const int LevelDetailRsp::kGhostQuantityFieldNumber;
const int LevelDetailRsp::kGargoyleQuantityFieldNumber;
const int LevelDetailRsp::kTreasureChestQuantityFieldNumber;
const int LevelDetailRsp::kGhostSpeedFieldNumber;
const int LevelDetailRsp::kPlayerSpeedFieldNumber;
const int LevelDetailRsp::kPlayerHPFieldNumber;
const int LevelDetailRsp::kLimitTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelDetailRsp::LevelDetailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelDetailRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelDetailRsp)
}
LevelDetailRsp::LevelDetailRsp(const LevelDetailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  ::memcpy(&resultcode_, &from.resultcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&limittime_) -
    reinterpret_cast<char*>(&resultcode_)) + sizeof(limittime_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelDetailRsp)
}

void LevelDetailRsp::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limittime_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(limittime_));
}

LevelDetailRsp::~LevelDetailRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelDetailRsp)
  SharedDtor();
}

void LevelDetailRsp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelDetailRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelDetailRsp::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelDetailRsp& LevelDetailRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelDetailRsp.base);
  return *internal_default_instance();
}


void LevelDetailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limittime_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(limittime_));
  _internal_metadata_.Clear();
}

bool LevelDetailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelDetailRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ResultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LevelID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelDetailRsp.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Detail = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), static_cast<int>(this->detail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelDetailRsp.Detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GhostQuantity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ghostquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GargoyleQuantity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gargoylequantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TreasureChestQuantity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &treasurechestquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double GhostSpeed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ghostspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PlayerSpeed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &playerspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PlayerHP = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LimitTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelDetailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelDetailRsp)
  return false;
#undef DO_
}

void LevelDetailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->levelid(), output);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDetailRsp.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string Detail = 4;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDetailRsp.Detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->detail(), output);
  }

  // int32 GhostQuantity = 5;
  if (this->ghostquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ghostquantity(), output);
  }

  // int32 GargoyleQuantity = 6;
  if (this->gargoylequantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->gargoylequantity(), output);
  }

  // int32 TreasureChestQuantity = 7;
  if (this->treasurechestquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->treasurechestquantity(), output);
  }

  // double GhostSpeed = 8;
  if (this->ghostspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->ghostspeed(), output);
  }

  // double PlayerSpeed = 9;
  if (this->playerspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->playerspeed(), output);
  }

  // int32 PlayerHP = 10;
  if (this->playerhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->playerhp(), output);
  }

  // int32 LimitTime = 11;
  if (this->limittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->limittime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelDetailRsp)
}

::google::protobuf::uint8* LevelDetailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->levelid(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDetailRsp.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string Detail = 4;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDetailRsp.Detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->detail(), target);
  }

  // int32 GhostQuantity = 5;
  if (this->ghostquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ghostquantity(), target);
  }

  // int32 GargoyleQuantity = 6;
  if (this->gargoylequantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->gargoylequantity(), target);
  }

  // int32 TreasureChestQuantity = 7;
  if (this->treasurechestquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->treasurechestquantity(), target);
  }

  // double GhostSpeed = 8;
  if (this->ghostspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->ghostspeed(), target);
  }

  // double PlayerSpeed = 9;
  if (this->playerspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->playerspeed(), target);
  }

  // int32 PlayerHP = 10;
  if (this->playerhp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->playerhp(), target);
  }

  // int32 LimitTime = 11;
  if (this->limittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->limittime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelDetailRsp)
  return target;
}

size_t LevelDetailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelDetailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Detail = 4;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  // int32 GhostQuantity = 5;
  if (this->ghostquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ghostquantity());
  }

  // int32 GargoyleQuantity = 6;
  if (this->gargoylequantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gargoylequantity());
  }

  // double GhostSpeed = 8;
  if (this->ghostspeed() != 0) {
    total_size += 1 + 8;
  }

  // int32 TreasureChestQuantity = 7;
  if (this->treasurechestquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->treasurechestquantity());
  }

  // int32 PlayerHP = 10;
  if (this->playerhp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerhp());
  }

  // double PlayerSpeed = 9;
  if (this->playerspeed() != 0) {
    total_size += 1 + 8;
  }

  // int32 LimitTime = 11;
  if (this->limittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limittime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDetailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelDetailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelDetailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelDetailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelDetailRsp)
    MergeFrom(*source);
  }
}

void LevelDetailRsp::MergeFrom(const LevelDetailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
  if (from.ghostquantity() != 0) {
    set_ghostquantity(from.ghostquantity());
  }
  if (from.gargoylequantity() != 0) {
    set_gargoylequantity(from.gargoylequantity());
  }
  if (from.ghostspeed() != 0) {
    set_ghostspeed(from.ghostspeed());
  }
  if (from.treasurechestquantity() != 0) {
    set_treasurechestquantity(from.treasurechestquantity());
  }
  if (from.playerhp() != 0) {
    set_playerhp(from.playerhp());
  }
  if (from.playerspeed() != 0) {
    set_playerspeed(from.playerspeed());
  }
  if (from.limittime() != 0) {
    set_limittime(from.limittime());
  }
}

void LevelDetailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelDetailRsp::CopyFrom(const LevelDetailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDetailRsp::IsInitialized() const {
  return true;
}

void LevelDetailRsp::Swap(LevelDetailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelDetailRsp::InternalSwap(LevelDetailRsp* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  detail_.Swap(&other->detail_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resultcode_, other->resultcode_);
  swap(levelid_, other->levelid_);
  swap(ghostquantity_, other->ghostquantity_);
  swap(gargoylequantity_, other->gargoylequantity_);
  swap(ghostspeed_, other->ghostspeed_);
  swap(treasurechestquantity_, other->treasurechestquantity_);
  swap(playerhp_, other->playerhp_);
  swap(playerspeed_, other->playerspeed_);
  swap(limittime_, other->limittime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelDetailRsp::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GhostData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GhostData::kIDFieldNumber;
const int GhostData::kBirthPointFieldNumber;
const int GhostData::kWayPointFieldNumber;
const int GhostData::kSpeedFieldNumber;
const int GhostData::kHpFieldNumber;
const int GhostData::kAttackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GhostData::GhostData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_GhostData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.GhostData)
}
GhostData::GhostData(const GhostData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      waypoint_(from.waypoint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&attack_) -
    reinterpret_cast<char*>(&id_)) + sizeof(attack_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.GhostData)
}

void GhostData::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attack_) -
      reinterpret_cast<char*>(&id_)) + sizeof(attack_));
}

GhostData::~GhostData() {
  // @@protoc_insertion_point(destructor:TCCamp.GhostData)
  SharedDtor();
}

void GhostData::SharedDtor() {
}

void GhostData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GhostData::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GhostData& GhostData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_GhostData.base);
  return *internal_default_instance();
}


void GhostData::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.GhostData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  waypoint_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attack_) -
      reinterpret_cast<char*>(&id_)) + sizeof(attack_));
  _internal_metadata_.Clear();
}

bool GhostData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.GhostData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BirthPoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &birthpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 WayPoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_waypoint())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_waypoint())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attack = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.GhostData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.GhostData)
  return false;
#undef DO_
}

void GhostData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.GhostData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 BirthPoint = 2;
  if (this->birthpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->birthpoint(), output);
  }

  // repeated int32 WayPoint = 3;
  if (this->waypoint_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _waypoint_cached_byte_size_));
  }
  for (int i = 0, n = this->waypoint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->waypoint(i), output);
  }

  // float speed = 4;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->speed(), output);
  }

  // int32 Hp = 5;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->hp(), output);
  }

  // int32 attack = 6;
  if (this->attack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->attack(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.GhostData)
}

::google::protobuf::uint8* GhostData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.GhostData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 BirthPoint = 2;
  if (this->birthpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->birthpoint(), target);
  }

  // repeated int32 WayPoint = 3;
  if (this->waypoint_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _waypoint_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->waypoint_, target);
  }

  // float speed = 4;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->speed(), target);
  }

  // int32 Hp = 5;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->hp(), target);
  }

  // int32 attack = 6;
  if (this->attack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->attack(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.GhostData)
  return target;
}

size_t GhostData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.GhostData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 WayPoint = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->waypoint_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _waypoint_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 BirthPoint = 2;
  if (this->birthpoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->birthpoint());
  }

  // float speed = 4;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // int32 Hp = 5;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // int32 attack = 6;
  if (this->attack() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attack());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GhostData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.GhostData)
  GOOGLE_DCHECK_NE(&from, this);
  const GhostData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GhostData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.GhostData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.GhostData)
    MergeFrom(*source);
  }
}

void GhostData::MergeFrom(const GhostData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.GhostData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  waypoint_.MergeFrom(from.waypoint_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.birthpoint() != 0) {
    set_birthpoint(from.birthpoint());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.attack() != 0) {
    set_attack(from.attack());
  }
}

void GhostData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.GhostData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GhostData::CopyFrom(const GhostData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.GhostData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GhostData::IsInitialized() const {
  return true;
}

void GhostData::Swap(GhostData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GhostData::InternalSwap(GhostData* other) {
  using std::swap;
  waypoint_.InternalSwap(&other->waypoint_);
  swap(id_, other->id_);
  swap(birthpoint_, other->birthpoint_);
  swap(speed_, other->speed_);
  swap(hp_, other->hp_);
  swap(attack_, other->attack_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GhostData::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TreasureChestData::InitAsDefaultInstance() {
  ::TCCamp::_TreasureChestData_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Float3*>(
      ::TCCamp::Float3::internal_default_instance());
}
void TreasureChestData::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreasureChestData::kIDFieldNumber;
const int TreasureChestData::kBeOpenedFieldNumber;
const int TreasureChestData::kItemIdListFieldNumber;
const int TreasureChestData::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreasureChestData::TreasureChestData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_TreasureChestData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.TreasureChestData)
}
TreasureChestData::TreasureChestData(const TreasureChestData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      itemidlist_(from.itemidlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Float3(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&beopened_) -
    reinterpret_cast<char*>(&id_)) + sizeof(beopened_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.TreasureChestData)
}

void TreasureChestData::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beopened_) -
      reinterpret_cast<char*>(&position_)) + sizeof(beopened_));
}

TreasureChestData::~TreasureChestData() {
  // @@protoc_insertion_point(destructor:TCCamp.TreasureChestData)
  SharedDtor();
}

void TreasureChestData::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void TreasureChestData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TreasureChestData::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreasureChestData& TreasureChestData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_TreasureChestData.base);
  return *internal_default_instance();
}


void TreasureChestData::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.TreasureChestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemidlist_.Clear();
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beopened_) -
      reinterpret_cast<char*>(&id_)) + sizeof(beopened_));
  _internal_metadata_.Clear();
}

bool TreasureChestData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.TreasureChestData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BeOpened = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &beopened_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 ItemIdList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_itemidlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_itemidlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Float3 Position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.TreasureChestData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.TreasureChestData)
  return false;
#undef DO_
}

void TreasureChestData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.TreasureChestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // bool BeOpened = 2;
  if (this->beopened() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->beopened(), output);
  }

  // repeated int32 ItemIdList = 3;
  if (this->itemidlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _itemidlist_cached_byte_size_));
  }
  for (int i = 0, n = this->itemidlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->itemidlist(i), output);
  }

  // .TCCamp.Float3 Position = 4;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.TreasureChestData)
}

::google::protobuf::uint8* TreasureChestData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.TreasureChestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // bool BeOpened = 2;
  if (this->beopened() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->beopened(), target);
  }

  // repeated int32 ItemIdList = 3;
  if (this->itemidlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _itemidlist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->itemidlist_, target);
  }

  // .TCCamp.Float3 Position = 4;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.TreasureChestData)
  return target;
}

size_t TreasureChestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.TreasureChestData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 ItemIdList = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->itemidlist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _itemidlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .TCCamp.Float3 Position = 4;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool BeOpened = 2;
  if (this->beopened() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TreasureChestData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.TreasureChestData)
  GOOGLE_DCHECK_NE(&from, this);
  const TreasureChestData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreasureChestData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.TreasureChestData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.TreasureChestData)
    MergeFrom(*source);
  }
}

void TreasureChestData::MergeFrom(const TreasureChestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.TreasureChestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemidlist_.MergeFrom(from.itemidlist_);
  if (from.has_position()) {
    mutable_position()->::TCCamp::Float3::MergeFrom(from.position());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.beopened() != 0) {
    set_beopened(from.beopened());
  }
}

void TreasureChestData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.TreasureChestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreasureChestData::CopyFrom(const TreasureChestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.TreasureChestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasureChestData::IsInitialized() const {
  return true;
}

void TreasureChestData::Swap(TreasureChestData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreasureChestData::InternalSwap(TreasureChestData* other) {
  using std::swap;
  itemidlist_.InternalSwap(&other->itemidlist_);
  swap(position_, other->position_);
  swap(id_, other->id_);
  swap(beopened_, other->beopened_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TreasureChestData::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LightData::InitAsDefaultInstance() {
  ::TCCamp::_LightData_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Float3*>(
      ::TCCamp::Float3::internal_default_instance());
}
void LightData::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightData::kIDFieldNumber;
const int LightData::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightData::LightData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LightData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LightData)
}
LightData::LightData(const LightData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Float3(*from.position_);
  } else {
    position_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.LightData)
}

void LightData::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(id_));
}

LightData::~LightData() {
  // @@protoc_insertion_point(destructor:TCCamp.LightData)
  SharedDtor();
}

void LightData::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void LightData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LightData::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightData& LightData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LightData.base);
  return *internal_default_instance();
}


void LightData::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LightData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool LightData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LightData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Float3 Position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LightData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LightData)
  return false;
#undef DO_
}

void LightData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LightData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .TCCamp.Float3 Position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LightData)
}

::google::protobuf::uint8* LightData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LightData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .TCCamp.Float3 Position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LightData)
  return target;
}

size_t LightData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LightData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Float3 Position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LightData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LightData)
  GOOGLE_DCHECK_NE(&from, this);
  const LightData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LightData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LightData)
    MergeFrom(*source);
  }
}

void LightData::MergeFrom(const LightData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LightData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Float3::MergeFrom(from.position());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void LightData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LightData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightData::CopyFrom(const LightData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LightData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightData::IsInitialized() const {
  return true;
}

void LightData::Swap(LightData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightData::InternalSwap(LightData* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LightData::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelDataReq::kPlayerIDFieldNumber;
const int LevelDataReq::kLevelIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelDataReq::LevelDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelDataReq)
}
LevelDataReq::LevelDataReq(const LevelDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  levelid_ = from.levelid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelDataReq)
}

void LevelDataReq::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelid_ = 0;
}

LevelDataReq::~LevelDataReq() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelDataReq)
  SharedDtor();
}

void LevelDataReq::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelDataReq::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelDataReq& LevelDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelDataReq.base);
  return *internal_default_instance();
}


void LevelDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelid_ = 0;
  _internal_metadata_.Clear();
}

bool LevelDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelDataReq.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LevelID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelDataReq)
  return false;
#undef DO_
}

void LevelDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDataReq.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->levelid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelDataReq)
}

::google::protobuf::uint8* LevelDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDataReq.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->levelid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelDataReq)
  return target;
}

size_t LevelDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelDataReq)
    MergeFrom(*source);
  }
}

void LevelDataReq::MergeFrom(const LevelDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
}

void LevelDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelDataReq::CopyFrom(const LevelDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDataReq::IsInitialized() const {
  return true;
}

void LevelDataReq::Swap(LevelDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelDataReq::InternalSwap(LevelDataReq* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(levelid_, other->levelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelDataReq::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelDataRsp::InitAsDefaultInstance() {
}
void LevelDataRsp::clear_gargoyleposition() {
  gargoyleposition_.Clear();
}
void LevelDataRsp::clear_slowtrap() {
  slowtrap_.Clear();
}
void LevelDataRsp::clear_spikestrap() {
  spikestrap_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelDataRsp::kResultCodeFieldNumber;
const int LevelDataRsp::kLevelIDFieldNumber;
const int LevelDataRsp::kNameFieldNumber;
const int LevelDataRsp::kGargoylePositionFieldNumber;
const int LevelDataRsp::kGhostsFieldNumber;
const int LevelDataRsp::kTreasureChestFieldNumber;
const int LevelDataRsp::kPlayerSpeedFieldNumber;
const int LevelDataRsp::kPlayerHPFieldNumber;
const int LevelDataRsp::kLightFieldNumber;
const int LevelDataRsp::kSlowTrapFieldNumber;
const int LevelDataRsp::kSpikesTrapFieldNumber;
const int LevelDataRsp::kLimitTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelDataRsp::LevelDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelDataRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelDataRsp)
}
LevelDataRsp::LevelDataRsp(const LevelDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gargoyleposition_(from.gargoyleposition_),
      ghosts_(from.ghosts_),
      treasurechest_(from.treasurechest_),
      light_(from.light_),
      slowtrap_(from.slowtrap_),
      spikestrap_(from.spikestrap_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&resultcode_, &from.resultcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&limittime_) -
    reinterpret_cast<char*>(&resultcode_)) + sizeof(limittime_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelDataRsp)
}

void LevelDataRsp::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limittime_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(limittime_));
}

LevelDataRsp::~LevelDataRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelDataRsp)
  SharedDtor();
}

void LevelDataRsp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelDataRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelDataRsp::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelDataRsp& LevelDataRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelDataRsp.base);
  return *internal_default_instance();
}


void LevelDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gargoyleposition_.Clear();
  ghosts_.Clear();
  treasurechest_.Clear();
  light_.Clear();
  slowtrap_.Clear();
  spikestrap_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limittime_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(limittime_));
  _internal_metadata_.Clear();
}

bool LevelDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelDataRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ResultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LevelID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelDataRsp.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.Float3 GargoylePosition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gargoyleposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.GhostData Ghosts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ghosts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.TreasureChestData TreasureChest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_treasurechest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PlayerSpeed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &playerspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PlayerHP = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.LightData Light = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_light()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.Float3 SlowTrap = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_slowtrap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.Float3 SpikesTrap = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_spikestrap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LimitTime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelDataRsp)
  return false;
#undef DO_
}

void LevelDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->levelid(), output);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDataRsp.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .TCCamp.Float3 GargoylePosition = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gargoyleposition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->gargoyleposition(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.GhostData Ghosts = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghosts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->ghosts(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.TreasureChestData TreasureChest = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treasurechest_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->treasurechest(static_cast<int>(i)),
      output);
  }

  // double PlayerSpeed = 9;
  if (this->playerspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->playerspeed(), output);
  }

  // int32 PlayerHP = 10;
  if (this->playerhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->playerhp(), output);
  }

  // repeated .TCCamp.LightData Light = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->light_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->light(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.Float3 SlowTrap = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slowtrap_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->slowtrap(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.Float3 SpikesTrap = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spikestrap_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->spikestrap(static_cast<int>(i)),
      output);
  }

  // int32 LimitTime = 14;
  if (this->limittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->limittime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelDataRsp)
}

::google::protobuf::uint8* LevelDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->levelid(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelDataRsp.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .TCCamp.Float3 GargoylePosition = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gargoyleposition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->gargoyleposition(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.GhostData Ghosts = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghosts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->ghosts(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.TreasureChestData TreasureChest = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treasurechest_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->treasurechest(static_cast<int>(i)), deterministic, target);
  }

  // double PlayerSpeed = 9;
  if (this->playerspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->playerspeed(), target);
  }

  // int32 PlayerHP = 10;
  if (this->playerhp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->playerhp(), target);
  }

  // repeated .TCCamp.LightData Light = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->light_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->light(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.Float3 SlowTrap = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slowtrap_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->slowtrap(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.Float3 SpikesTrap = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spikestrap_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->spikestrap(static_cast<int>(i)), deterministic, target);
  }

  // int32 LimitTime = 14;
  if (this->limittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->limittime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelDataRsp)
  return target;
}

size_t LevelDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.Float3 GargoylePosition = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->gargoyleposition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gargoyleposition(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.GhostData Ghosts = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->ghosts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ghosts(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.TreasureChestData TreasureChest = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->treasurechest_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->treasurechest(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.LightData Light = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->light_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->light(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.Float3 SlowTrap = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->slowtrap_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->slowtrap(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.Float3 SpikesTrap = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->spikestrap_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spikestrap(static_cast<int>(i)));
    }
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  // double PlayerSpeed = 9;
  if (this->playerspeed() != 0) {
    total_size += 1 + 8;
  }

  // int32 PlayerHP = 10;
  if (this->playerhp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerhp());
  }

  // int32 LimitTime = 14;
  if (this->limittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limittime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelDataRsp)
    MergeFrom(*source);
  }
}

void LevelDataRsp::MergeFrom(const LevelDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gargoyleposition_.MergeFrom(from.gargoyleposition_);
  ghosts_.MergeFrom(from.ghosts_);
  treasurechest_.MergeFrom(from.treasurechest_);
  light_.MergeFrom(from.light_);
  slowtrap_.MergeFrom(from.slowtrap_);
  spikestrap_.MergeFrom(from.spikestrap_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
  if (from.playerspeed() != 0) {
    set_playerspeed(from.playerspeed());
  }
  if (from.playerhp() != 0) {
    set_playerhp(from.playerhp());
  }
  if (from.limittime() != 0) {
    set_limittime(from.limittime());
  }
}

void LevelDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelDataRsp::CopyFrom(const LevelDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDataRsp::IsInitialized() const {
  return true;
}

void LevelDataRsp::Swap(LevelDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelDataRsp::InternalSwap(LevelDataRsp* other) {
  using std::swap;
  CastToBase(&gargoyleposition_)->InternalSwap(CastToBase(&other->gargoyleposition_));
  CastToBase(&ghosts_)->InternalSwap(CastToBase(&other->ghosts_));
  CastToBase(&treasurechest_)->InternalSwap(CastToBase(&other->treasurechest_));
  CastToBase(&light_)->InternalSwap(CastToBase(&other->light_));
  CastToBase(&slowtrap_)->InternalSwap(CastToBase(&other->slowtrap_));
  CastToBase(&spikestrap_)->InternalSwap(CastToBase(&other->spikestrap_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resultcode_, other->resultcode_);
  swap(levelid_, other->levelid_);
  swap(playerspeed_, other->playerspeed_);
  swap(playerhp_, other->playerhp_);
  swap(limittime_, other->limittime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelDataRsp::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelStart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelStart::kPlayerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelStart::LevelStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelStart.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelStart)
}
LevelStart::LevelStart(const LevelStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelStart)
}

void LevelStart::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LevelStart::~LevelStart() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelStart)
  SharedDtor();
}

void LevelStart::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelStart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelStart::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelStart& LevelStart::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelStart.base);
  return *internal_default_instance();
}


void LevelStart::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LevelStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelStart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelStart.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelStart)
  return false;
#undef DO_
}

void LevelStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelStart.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelStart)
}

::google::protobuf::uint8* LevelStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelStart.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelStart)
  return target;
}

size_t LevelStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelStart)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelStart)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelStart)
    MergeFrom(*source);
  }
}

void LevelStart::MergeFrom(const LevelStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
}

void LevelStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelStart::CopyFrom(const LevelStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelStart::IsInitialized() const {
  return true;
}

void LevelStart::Swap(LevelStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelStart::InternalSwap(LevelStart* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelStart::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelSettleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelSettleReq::kPlayerIDFieldNumber;
const int LevelSettleReq::kLevelIDFieldNumber;
const int LevelSettleReq::kKillGhostFieldNumber;
const int LevelSettleReq::kSpendTimeFieldNumber;
const int LevelSettleReq::kGoldFieldNumber;
const int LevelSettleReq::kWinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelSettleReq::LevelSettleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelSettleReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelSettleReq)
}
LevelSettleReq::LevelSettleReq(const LevelSettleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  ::memcpy(&levelid_, &from.levelid_,
    static_cast<size_t>(reinterpret_cast<char*>(&win_) -
    reinterpret_cast<char*>(&levelid_)) + sizeof(win_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelSettleReq)
}

void LevelSettleReq::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&levelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&win_) -
      reinterpret_cast<char*>(&levelid_)) + sizeof(win_));
}

LevelSettleReq::~LevelSettleReq() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelSettleReq)
  SharedDtor();
}

void LevelSettleReq::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelSettleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelSettleReq::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelSettleReq& LevelSettleReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelSettleReq.base);
  return *internal_default_instance();
}


void LevelSettleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelSettleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&levelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&win_) -
      reinterpret_cast<char*>(&levelid_)) + sizeof(win_));
  _internal_metadata_.Clear();
}

bool LevelSettleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelSettleReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.LevelSettleReq.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LevelID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 KillGhost = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killghost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SpendTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &spendtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Gold = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Win = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &win_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelSettleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelSettleReq)
  return false;
#undef DO_
}

void LevelSettleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelSettleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelSettleReq.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->levelid(), output);
  }

  // int32 KillGhost = 3;
  if (this->killghost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->killghost(), output);
  }

  // float SpendTime = 4;
  if (this->spendtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->spendtime(), output);
  }

  // int32 Gold = 5;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gold(), output);
  }

  // bool Win = 6;
  if (this->win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->win(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelSettleReq)
}

::google::protobuf::uint8* LevelSettleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelSettleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.LevelSettleReq.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->levelid(), target);
  }

  // int32 KillGhost = 3;
  if (this->killghost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->killghost(), target);
  }

  // float SpendTime = 4;
  if (this->spendtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->spendtime(), target);
  }

  // int32 Gold = 5;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gold(), target);
  }

  // bool Win = 6;
  if (this->win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->win(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelSettleReq)
  return target;
}

size_t LevelSettleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelSettleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // int32 LevelID = 2;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  // int32 KillGhost = 3;
  if (this->killghost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->killghost());
  }

  // float SpendTime = 4;
  if (this->spendtime() != 0) {
    total_size += 1 + 4;
  }

  // int32 Gold = 5;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  // bool Win = 6;
  if (this->win() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelSettleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelSettleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelSettleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelSettleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelSettleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelSettleReq)
    MergeFrom(*source);
  }
}

void LevelSettleReq::MergeFrom(const LevelSettleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelSettleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
  if (from.killghost() != 0) {
    set_killghost(from.killghost());
  }
  if (from.spendtime() != 0) {
    set_spendtime(from.spendtime());
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
  if (from.win() != 0) {
    set_win(from.win());
  }
}

void LevelSettleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelSettleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelSettleReq::CopyFrom(const LevelSettleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelSettleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelSettleReq::IsInitialized() const {
  return true;
}

void LevelSettleReq::Swap(LevelSettleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelSettleReq::InternalSwap(LevelSettleReq* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(levelid_, other->levelid_);
  swap(killghost_, other->killghost_);
  swap(spendtime_, other->spendtime_);
  swap(gold_, other->gold_);
  swap(win_, other->win_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelSettleReq::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelSettleRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelSettleRsp::kResultCodeFieldNumber;
const int LevelSettleRsp::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelSettleRsp::LevelSettleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelSettleRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelSettleRsp)
}
LevelSettleRsp::LevelSettleRsp(const LevelSettleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&resultcode_, &from.resultcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&resultcode_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelSettleRsp)
}

void LevelSettleRsp::SharedCtor() {
  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(score_));
}

LevelSettleRsp::~LevelSettleRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelSettleRsp)
  SharedDtor();
}

void LevelSettleRsp::SharedDtor() {
}

void LevelSettleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelSettleRsp::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelSettleRsp& LevelSettleRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelSettleRsp.base);
  return *internal_default_instance();
}


void LevelSettleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelSettleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool LevelSettleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelSettleRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ResultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelSettleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelSettleRsp)
  return false;
#undef DO_
}

void LevelSettleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelSettleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // int32 Score = 3;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelSettleRsp)
}

::google::protobuf::uint8* LevelSettleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelSettleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // int32 Score = 3;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelSettleRsp)
  return target;
}

size_t LevelSettleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelSettleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  // int32 Score = 3;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelSettleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelSettleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelSettleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelSettleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelSettleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelSettleRsp)
    MergeFrom(*source);
  }
}

void LevelSettleRsp::MergeFrom(const LevelSettleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelSettleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void LevelSettleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelSettleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelSettleRsp::CopyFrom(const LevelSettleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelSettleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelSettleRsp::IsInitialized() const {
  return true;
}

void LevelSettleRsp::Swap(LevelSettleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelSettleRsp::InternalSwap(LevelSettleRsp* other) {
  using std::swap;
  swap(resultcode_, other->resultcode_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelSettleRsp::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankReq::kPlayerIDFieldNumber;
const int RankReq::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankReq::RankReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_RankReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RankReq)
}
RankReq::RankReq(const RankReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  page_ = from.page_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.RankReq)
}

void RankReq::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = 0;
}

RankReq::~RankReq() {
  // @@protoc_insertion_point(destructor:TCCamp.RankReq)
  SharedDtor();
}

void RankReq::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RankReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RankReq::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankReq& RankReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_RankReq.base);
  return *internal_default_instance();
}


void RankReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = 0;
  _internal_metadata_.Clear();
}

bool RankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RankReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.RankReq.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RankReq)
  return false;
#undef DO_
}

void RankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankReq.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  // int32 page = 2;
  if (this->page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RankReq)
}

::google::protobuf::uint8* RankReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankReq.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  // int32 page = 2;
  if (this->page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RankReq)
  return target;
}

size_t RankReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RankReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // int32 page = 2;
  if (this->page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RankReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RankReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RankReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RankReq)
    MergeFrom(*source);
  }
}

void RankReq::MergeFrom(const RankReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RankReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.page() != 0) {
    set_page(from.page());
  }
}

void RankReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankReq::CopyFrom(const RankReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankReq::IsInitialized() const {
  return true;
}

void RankReq::Swap(RankReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankReq::InternalSwap(RankReq* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RankReq::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankItem::kRankFieldNumber;
const int RankItem::kPlayerIDFieldNumber;
const int RankItem::kNameFieldNumber;
const int RankItem::kGoldFieldNumber;
const int RankItem::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankItem::RankItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_RankItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RankItem)
}
RankItem::RankItem(const RankItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.RankItem)
}

void RankItem::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(score_));
}

RankItem::~RankItem() {
  // @@protoc_insertion_point(destructor:TCCamp.RankItem)
  SharedDtor();
}

void RankItem::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RankItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RankItem::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankItem& RankItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_RankItem.base);
  return *internal_default_instance();
}


void RankItem::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RankItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool RankItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RankItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Rank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PlayerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.RankItem.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.RankItem.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Gold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RankItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RankItem)
  return false;
#undef DO_
}

void RankItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RankItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Rank = 1;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // string PlayerID = 2;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankItem.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playerid(), output);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // int32 Gold = 4;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gold(), output);
  }

  // int32 Score = 5;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RankItem)
}

::google::protobuf::uint8* RankItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RankItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Rank = 1;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // string PlayerID = 2;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankItem.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playerid(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // int32 Gold = 4;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gold(), target);
  }

  // int32 Score = 5;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RankItem)
  return target;
}

size_t RankItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RankItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 2;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 Rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // int32 Gold = 4;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  // int32 Score = 5;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RankItem)
  GOOGLE_DCHECK_NE(&from, this);
  const RankItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RankItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RankItem)
    MergeFrom(*source);
  }
}

void RankItem::MergeFrom(const RankItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RankItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void RankItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RankItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankItem::CopyFrom(const RankItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RankItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankItem::IsInitialized() const {
  return true;
}

void RankItem::Swap(RankItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankItem::InternalSwap(RankItem* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rank_, other->rank_);
  swap(gold_, other->gold_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RankItem::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankRsp::InitAsDefaultInstance() {
  ::TCCamp::_RankRsp_default_instance_._instance.get_mutable()->playerrank_ = const_cast< ::TCCamp::RankItem*>(
      ::TCCamp::RankItem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankRsp::kResultCodeFieldNumber;
const int RankRsp::kRankFieldNumber;
const int RankRsp::kPlayerRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankRsp::RankRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_RankRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RankRsp)
}
RankRsp::RankRsp(const RankRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rank_(from.rank_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerrank()) {
    playerrank_ = new ::TCCamp::RankItem(*from.playerrank_);
  } else {
    playerrank_ = NULL;
  }
  resultcode_ = from.resultcode_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.RankRsp)
}

void RankRsp::SharedCtor() {
  ::memset(&playerrank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resultcode_) -
      reinterpret_cast<char*>(&playerrank_)) + sizeof(resultcode_));
}

RankRsp::~RankRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.RankRsp)
  SharedDtor();
}

void RankRsp::SharedDtor() {
  if (this != internal_default_instance()) delete playerrank_;
}

void RankRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RankRsp::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankRsp& RankRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_RankRsp.base);
  return *internal_default_instance();
}


void RankRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RankRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rank_.Clear();
  if (GetArenaNoVirtual() == NULL && playerrank_ != NULL) {
    delete playerrank_;
  }
  playerrank_ = NULL;
  resultcode_ = 0;
  _internal_metadata_.Clear();
}

bool RankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RankRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ResultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.RankItem Rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rank()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.RankItem PlayerRank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerrank()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RankRsp)
  return false;
#undef DO_
}

void RankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RankRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // repeated .TCCamp.RankItem Rank = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rank_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->rank(static_cast<int>(i)),
      output);
  }

  // .TCCamp.RankItem PlayerRank = 3;
  if (this->has_playerrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_playerrank(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RankRsp)
}

::google::protobuf::uint8* RankRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RankRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // repeated .TCCamp.RankItem Rank = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rank_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->rank(static_cast<int>(i)), deterministic, target);
  }

  // .TCCamp.RankItem PlayerRank = 3;
  if (this->has_playerrank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_playerrank(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RankRsp)
  return target;
}

size_t RankRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RankRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.RankItem Rank = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->rank_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rank(static_cast<int>(i)));
    }
  }

  // .TCCamp.RankItem PlayerRank = 3;
  if (this->has_playerrank()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerrank_);
  }

  // int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RankRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RankRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RankRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RankRsp)
    MergeFrom(*source);
  }
}

void RankRsp::MergeFrom(const RankRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RankRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rank_.MergeFrom(from.rank_);
  if (from.has_playerrank()) {
    mutable_playerrank()->::TCCamp::RankItem::MergeFrom(from.playerrank());
  }
  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
}

void RankRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RankRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankRsp::CopyFrom(const RankRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RankRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankRsp::IsInitialized() const {
  return true;
}

void RankRsp::Swap(RankRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankRsp::InternalSwap(RankRsp* other) {
  using std::swap;
  CastToBase(&rank_)->InternalSwap(CastToBase(&other->rank_));
  swap(playerrank_, other->playerrank_);
  swap(resultcode_, other->resultcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RankRsp::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PosRot::InitAsDefaultInstance() {
  ::TCCamp::_PosRot_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Float3*>(
      ::TCCamp::Float3::internal_default_instance());
  ::TCCamp::_PosRot_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Float4*>(
      ::TCCamp::Float4::internal_default_instance());
}
void PosRot::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
void PosRot::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PosRot::kPositionFieldNumber;
const int PosRot::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PosRot::PosRot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_PosRot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PosRot)
}
PosRot::PosRot(const PosRot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Float3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Float4(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.PosRot)
}

void PosRot::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(rotation_));
}

PosRot::~PosRot() {
  // @@protoc_insertion_point(destructor:TCCamp.PosRot)
  SharedDtor();
}

void PosRot::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void PosRot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PosRot::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PosRot& PosRot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_PosRot.base);
  return *internal_default_instance();
}


void PosRot::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PosRot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  _internal_metadata_.Clear();
}

bool PosRot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PosRot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.Float3 Position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Float4 Rotation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PosRot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PosRot)
  return false;
#undef DO_
}

void PosRot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PosRot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.Float3 Position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // .TCCamp.Float4 Rotation = 2;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PosRot)
}

::google::protobuf::uint8* PosRot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PosRot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.Float3 Position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Float4 Rotation = 2;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_rotation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PosRot)
  return target;
}

size_t PosRot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PosRot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Float3 Position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Float4 Rotation = 2;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PosRot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PosRot)
  GOOGLE_DCHECK_NE(&from, this);
  const PosRot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PosRot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PosRot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PosRot)
    MergeFrom(*source);
  }
}

void PosRot::MergeFrom(const PosRot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PosRot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Float3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Float4::MergeFrom(from.rotation());
  }
}

void PosRot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PosRot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosRot::CopyFrom(const PosRot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PosRot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosRot::IsInitialized() const {
  return true;
}

void PosRot::Swap(PosRot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PosRot::InternalSwap(PosRot* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PosRot::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GhostState::InitAsDefaultInstance() {
  ::TCCamp::_GhostState_default_instance_._instance.get_mutable()->ghosttransform_ = const_cast< ::TCCamp::PosRot*>(
      ::TCCamp::PosRot::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GhostState::kIDFieldNumber;
const int GhostState::kGhostTransformFieldNumber;
const int GhostState::kNextWayPointFieldNumber;
const int GhostState::kHpFieldNumber;
const int GhostState::kAttackFieldNumber;
const int GhostState::kSpeedFieldNumber;
const int GhostState::kModeFieldNumber;
const int GhostState::kIsSolvingFieldNumber;
const int GhostState::kSolveThresholdFieldNumber;
const int GhostState::kIsGhostActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GhostState::GhostState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_GhostState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.GhostState)
}
GhostState::GhostState(const GhostState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ghosttransform()) {
    ghosttransform_ = new ::TCCamp::PosRot(*from.ghosttransform_);
  } else {
    ghosttransform_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&isghostactive_) -
    reinterpret_cast<char*>(&id_)) + sizeof(isghostactive_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.GhostState)
}

void GhostState::SharedCtor() {
  ::memset(&ghosttransform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isghostactive_) -
      reinterpret_cast<char*>(&ghosttransform_)) + sizeof(isghostactive_));
}

GhostState::~GhostState() {
  // @@protoc_insertion_point(destructor:TCCamp.GhostState)
  SharedDtor();
}

void GhostState::SharedDtor() {
  if (this != internal_default_instance()) delete ghosttransform_;
}

void GhostState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GhostState::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GhostState& GhostState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_GhostState.base);
  return *internal_default_instance();
}


void GhostState::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.GhostState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ghosttransform_ != NULL) {
    delete ghosttransform_;
  }
  ghosttransform_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isghostactive_) -
      reinterpret_cast<char*>(&id_)) + sizeof(isghostactive_));
  _internal_metadata_.Clear();
}

bool GhostState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.GhostState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.PosRot GhostTransform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ghosttransform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 NextWayPoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextwaypoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Attack = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Speed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Mode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsSolving = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issolving_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float solveThreshold = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &solvethreshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsGhostActive = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isghostactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.GhostState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.GhostState)
  return false;
#undef DO_
}

void GhostState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.GhostState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .TCCamp.PosRot GhostTransform = 2;
  if (this->has_ghosttransform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ghosttransform(), output);
  }

  // int32 NextWayPoint = 3;
  if (this->nextwaypoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nextwaypoint(), output);
  }

  // int32 Hp = 4;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hp(), output);
  }

  // int32 Attack = 5;
  if (this->attack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->attack(), output);
  }

  // float Speed = 6;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->speed(), output);
  }

  // int32 Mode = 7;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->mode(), output);
  }

  // bool IsSolving = 8;
  if (this->issolving() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->issolving(), output);
  }

  // float solveThreshold = 9;
  if (this->solvethreshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->solvethreshold(), output);
  }

  // bool IsGhostActive = 10;
  if (this->isghostactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isghostactive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.GhostState)
}

::google::protobuf::uint8* GhostState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.GhostState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .TCCamp.PosRot GhostTransform = 2;
  if (this->has_ghosttransform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ghosttransform(), deterministic, target);
  }

  // int32 NextWayPoint = 3;
  if (this->nextwaypoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nextwaypoint(), target);
  }

  // int32 Hp = 4;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hp(), target);
  }

  // int32 Attack = 5;
  if (this->attack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->attack(), target);
  }

  // float Speed = 6;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->speed(), target);
  }

  // int32 Mode = 7;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->mode(), target);
  }

  // bool IsSolving = 8;
  if (this->issolving() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->issolving(), target);
  }

  // float solveThreshold = 9;
  if (this->solvethreshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->solvethreshold(), target);
  }

  // bool IsGhostActive = 10;
  if (this->isghostactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->isghostactive(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.GhostState)
  return target;
}

size_t GhostState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.GhostState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.PosRot GhostTransform = 2;
  if (this->has_ghosttransform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ghosttransform_);
  }

  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 NextWayPoint = 3;
  if (this->nextwaypoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nextwaypoint());
  }

  // int32 Hp = 4;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // int32 Attack = 5;
  if (this->attack() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attack());
  }

  // float Speed = 6;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // int32 Mode = 7;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // float solveThreshold = 9;
  if (this->solvethreshold() != 0) {
    total_size += 1 + 4;
  }

  // bool IsSolving = 8;
  if (this->issolving() != 0) {
    total_size += 1 + 1;
  }

  // bool IsGhostActive = 10;
  if (this->isghostactive() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GhostState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.GhostState)
  GOOGLE_DCHECK_NE(&from, this);
  const GhostState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GhostState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.GhostState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.GhostState)
    MergeFrom(*source);
  }
}

void GhostState::MergeFrom(const GhostState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.GhostState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ghosttransform()) {
    mutable_ghosttransform()->::TCCamp::PosRot::MergeFrom(from.ghosttransform());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.nextwaypoint() != 0) {
    set_nextwaypoint(from.nextwaypoint());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.attack() != 0) {
    set_attack(from.attack());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.solvethreshold() != 0) {
    set_solvethreshold(from.solvethreshold());
  }
  if (from.issolving() != 0) {
    set_issolving(from.issolving());
  }
  if (from.isghostactive() != 0) {
    set_isghostactive(from.isghostactive());
  }
}

void GhostState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.GhostState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GhostState::CopyFrom(const GhostState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.GhostState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GhostState::IsInitialized() const {
  return true;
}

void GhostState::Swap(GhostState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GhostState::InternalSwap(GhostState* other) {
  using std::swap;
  swap(ghosttransform_, other->ghosttransform_);
  swap(id_, other->id_);
  swap(nextwaypoint_, other->nextwaypoint_);
  swap(hp_, other->hp_);
  swap(attack_, other->attack_);
  swap(speed_, other->speed_);
  swap(mode_, other->mode_);
  swap(solvethreshold_, other->solvethreshold_);
  swap(issolving_, other->issolving_);
  swap(isghostactive_, other->isghostactive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GhostState::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IntPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntPair::kAFieldNumber;
const int IntPair::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntPair::IntPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_IntPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.IntPair)
}
IntPair::IntPair(const IntPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.IntPair)
}

void IntPair::SharedCtor() {
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

IntPair::~IntPair() {
  // @@protoc_insertion_point(destructor:TCCamp.IntPair)
  SharedDtor();
}

void IntPair::SharedDtor() {
}

void IntPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IntPair::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntPair& IntPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_IntPair.base);
  return *internal_default_instance();
}


void IntPair::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.IntPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
  _internal_metadata_.Clear();
}

bool IntPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.IntPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.IntPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.IntPair)
  return false;
#undef DO_
}

void IntPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.IntPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 a = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // int32 b = 2;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.IntPair)
}

::google::protobuf::uint8* IntPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.IntPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 a = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // int32 b = 2;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.IntPair)
  return target;
}

size_t IntPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.IntPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // int32 b = 2;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.IntPair)
  GOOGLE_DCHECK_NE(&from, this);
  const IntPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.IntPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.IntPair)
    MergeFrom(*source);
  }
}

void IntPair::MergeFrom(const IntPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.IntPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void IntPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.IntPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntPair::CopyFrom(const IntPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.IntPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntPair::IsInitialized() const {
  return true;
}

void IntPair::Swap(IntPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntPair::InternalSwap(IntPair* other) {
  using std::swap;
  swap(a_, other->a_);
  swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IntPair::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimerID2floatTimes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimerID2floatTimes::kIDFieldNumber;
const int TimerID2floatTimes::kTimeCalFieldNumber;
const int TimerID2floatTimes::kTimeIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimerID2floatTimes::TimerID2floatTimes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_TimerID2floatTimes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.TimerID2floatTimes)
}
TimerID2floatTimes::TimerID2floatTimes(const TimerID2floatTimes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeinterval_) -
    reinterpret_cast<char*>(&id_)) + sizeof(timeinterval_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.TimerID2floatTimes)
}

void TimerID2floatTimes::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeinterval_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timeinterval_));
}

TimerID2floatTimes::~TimerID2floatTimes() {
  // @@protoc_insertion_point(destructor:TCCamp.TimerID2floatTimes)
  SharedDtor();
}

void TimerID2floatTimes::SharedDtor() {
}

void TimerID2floatTimes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimerID2floatTimes::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimerID2floatTimes& TimerID2floatTimes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_TimerID2floatTimes.base);
  return *internal_default_instance();
}


void TimerID2floatTimes::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.TimerID2floatTimes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeinterval_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timeinterval_));
  _internal_metadata_.Clear();
}

bool TimerID2floatTimes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.TimerID2floatTimes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float TimeCal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timecal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float TimeInterval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timeinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.TimerID2floatTimes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.TimerID2floatTimes)
  return false;
#undef DO_
}

void TimerID2floatTimes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.TimerID2floatTimes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // float TimeCal = 2;
  if (this->timecal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->timecal(), output);
  }

  // float TimeInterval = 3;
  if (this->timeinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->timeinterval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.TimerID2floatTimes)
}

::google::protobuf::uint8* TimerID2floatTimes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.TimerID2floatTimes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // float TimeCal = 2;
  if (this->timecal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->timecal(), target);
  }

  // float TimeInterval = 3;
  if (this->timeinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->timeinterval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.TimerID2floatTimes)
  return target;
}

size_t TimerID2floatTimes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.TimerID2floatTimes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // float TimeCal = 2;
  if (this->timecal() != 0) {
    total_size += 1 + 4;
  }

  // float TimeInterval = 3;
  if (this->timeinterval() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimerID2floatTimes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.TimerID2floatTimes)
  GOOGLE_DCHECK_NE(&from, this);
  const TimerID2floatTimes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimerID2floatTimes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.TimerID2floatTimes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.TimerID2floatTimes)
    MergeFrom(*source);
  }
}

void TimerID2floatTimes::MergeFrom(const TimerID2floatTimes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.TimerID2floatTimes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.timecal() != 0) {
    set_timecal(from.timecal());
  }
  if (from.timeinterval() != 0) {
    set_timeinterval(from.timeinterval());
  }
}

void TimerID2floatTimes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.TimerID2floatTimes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimerID2floatTimes::CopyFrom(const TimerID2floatTimes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.TimerID2floatTimes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimerID2floatTimes::IsInitialized() const {
  return true;
}

void TimerID2floatTimes::Swap(TimerID2floatTimes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimerID2floatTimes::InternalSwap(TimerID2floatTimes* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(timecal_, other->timecal_);
  swap(timeinterval_, other->timeinterval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimerID2floatTimes::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TreasureChestState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreasureChestState::kIsOpenedFieldNumber;
const int TreasureChestState::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreasureChestState::TreasureChestState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_TreasureChestState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.TreasureChestState)
}
TreasureChestState::TreasureChestState(const TreasureChestState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isopened_, &from.isopened_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&isopened_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.TreasureChestState)
}

void TreasureChestState::SharedCtor() {
  ::memset(&isopened_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&isopened_)) + sizeof(id_));
}

TreasureChestState::~TreasureChestState() {
  // @@protoc_insertion_point(destructor:TCCamp.TreasureChestState)
  SharedDtor();
}

void TreasureChestState::SharedDtor() {
}

void TreasureChestState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TreasureChestState::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreasureChestState& TreasureChestState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_TreasureChestState.base);
  return *internal_default_instance();
}


void TreasureChestState::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.TreasureChestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&isopened_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&isopened_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool TreasureChestState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.TreasureChestState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isOpened = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isopened_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.TreasureChestState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.TreasureChestState)
  return false;
#undef DO_
}

void TreasureChestState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.TreasureChestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isOpened = 1;
  if (this->isopened() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isopened(), output);
  }

  // int32 ID = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.TreasureChestState)
}

::google::protobuf::uint8* TreasureChestState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.TreasureChestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isOpened = 1;
  if (this->isopened() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isopened(), target);
  }

  // int32 ID = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.TreasureChestState)
  return target;
}

size_t TreasureChestState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.TreasureChestState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isOpened = 1;
  if (this->isopened() != 0) {
    total_size += 1 + 1;
  }

  // int32 ID = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TreasureChestState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.TreasureChestState)
  GOOGLE_DCHECK_NE(&from, this);
  const TreasureChestState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreasureChestState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.TreasureChestState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.TreasureChestState)
    MergeFrom(*source);
  }
}

void TreasureChestState::MergeFrom(const TreasureChestState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.TreasureChestState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isopened() != 0) {
    set_isopened(from.isopened());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void TreasureChestState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.TreasureChestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreasureChestState::CopyFrom(const TreasureChestState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.TreasureChestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasureChestState::IsInitialized() const {
  return true;
}

void TreasureChestState::Swap(TreasureChestState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreasureChestState::InternalSwap(TreasureChestState* other) {
  using std::swap;
  swap(isopened_, other->isopened_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TreasureChestState::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LightState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightState::kIDFieldNumber;
const int LightState::kIsOnFieldNumber;
const int LightState::kElapsedTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightState::LightState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LightState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LightState)
}
LightState::LightState(const LightState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&elapsedtime_) -
    reinterpret_cast<char*>(&id_)) + sizeof(elapsedtime_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.LightState)
}

void LightState::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elapsedtime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(elapsedtime_));
}

LightState::~LightState() {
  // @@protoc_insertion_point(destructor:TCCamp.LightState)
  SharedDtor();
}

void LightState::SharedDtor() {
}

void LightState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LightState::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightState& LightState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LightState.base);
  return *internal_default_instance();
}


void LightState::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LightState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elapsedtime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(elapsedtime_));
  _internal_metadata_.Clear();
}

bool LightState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LightState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsOn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ison_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ElapsedTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &elapsedtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LightState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LightState)
  return false;
#undef DO_
}

void LightState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LightState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // bool IsOn = 2;
  if (this->ison() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ison(), output);
  }

  // float ElapsedTime = 3;
  if (this->elapsedtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->elapsedtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LightState)
}

::google::protobuf::uint8* LightState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LightState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // bool IsOn = 2;
  if (this->ison() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ison(), target);
  }

  // float ElapsedTime = 3;
  if (this->elapsedtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->elapsedtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LightState)
  return target;
}

size_t LightState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LightState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool IsOn = 2;
  if (this->ison() != 0) {
    total_size += 1 + 1;
  }

  // float ElapsedTime = 3;
  if (this->elapsedtime() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LightState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LightState)
  GOOGLE_DCHECK_NE(&from, this);
  const LightState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LightState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LightState)
    MergeFrom(*source);
  }
}

void LightState::MergeFrom(const LightState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LightState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.ison() != 0) {
    set_ison(from.ison());
  }
  if (from.elapsedtime() != 0) {
    set_elapsedtime(from.elapsedtime());
  }
}

void LightState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LightState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightState::CopyFrom(const LightState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LightState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightState::IsInitialized() const {
  return true;
}

void LightState::Swap(LightState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightState::InternalSwap(LightState* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(ison_, other->ison_);
  swap(elapsedtime_, other->elapsedtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LightState::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SkillState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillState::kIDFieldNumber;
const int SkillState::kIsActiveFieldNumber;
const int SkillState::kColdTimeLeftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillState::SkillState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_SkillState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SkillState)
}
SkillState::SkillState(const SkillState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&coldtimeleft_) -
    reinterpret_cast<char*>(&id_)) + sizeof(coldtimeleft_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.SkillState)
}

void SkillState::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coldtimeleft_) -
      reinterpret_cast<char*>(&id_)) + sizeof(coldtimeleft_));
}

SkillState::~SkillState() {
  // @@protoc_insertion_point(destructor:TCCamp.SkillState)
  SharedDtor();
}

void SkillState::SharedDtor() {
}

void SkillState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SkillState::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillState& SkillState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_SkillState.base);
  return *internal_default_instance();
}


void SkillState::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SkillState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coldtimeleft_) -
      reinterpret_cast<char*>(&id_)) + sizeof(coldtimeleft_));
  _internal_metadata_.Clear();
}

bool SkillState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SkillState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsActive = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ColdTimeLeft = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &coldtimeleft_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SkillState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SkillState)
  return false;
#undef DO_
}

void SkillState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SkillState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // bool IsActive = 2;
  if (this->isactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isactive(), output);
  }

  // float ColdTimeLeft = 3;
  if (this->coldtimeleft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->coldtimeleft(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SkillState)
}

::google::protobuf::uint8* SkillState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SkillState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // bool IsActive = 2;
  if (this->isactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isactive(), target);
  }

  // float ColdTimeLeft = 3;
  if (this->coldtimeleft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->coldtimeleft(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SkillState)
  return target;
}

size_t SkillState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SkillState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool IsActive = 2;
  if (this->isactive() != 0) {
    total_size += 1 + 1;
  }

  // float ColdTimeLeft = 3;
  if (this->coldtimeleft() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SkillState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SkillState)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SkillState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SkillState)
    MergeFrom(*source);
  }
}

void SkillState::MergeFrom(const SkillState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SkillState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.isactive() != 0) {
    set_isactive(from.isactive());
  }
  if (from.coldtimeleft() != 0) {
    set_coldtimeleft(from.coldtimeleft());
  }
}

void SkillState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SkillState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillState::CopyFrom(const SkillState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SkillState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillState::IsInitialized() const {
  return true;
}

void SkillState::Swap(SkillState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillState::InternalSwap(SkillState* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(isactive_, other->isactive_);
  swap(coldtimeleft_, other->coldtimeleft_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SkillState::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SlowState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SlowState::kSlowSpeedFieldNumber;
const int SlowState::kLeftTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlowState::SlowState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_SlowState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SlowState)
}
SlowState::SlowState(const SlowState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slowspeed_, &from.slowspeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&lefttime_) -
    reinterpret_cast<char*>(&slowspeed_)) + sizeof(lefttime_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.SlowState)
}

void SlowState::SharedCtor() {
  ::memset(&slowspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lefttime_) -
      reinterpret_cast<char*>(&slowspeed_)) + sizeof(lefttime_));
}

SlowState::~SlowState() {
  // @@protoc_insertion_point(destructor:TCCamp.SlowState)
  SharedDtor();
}

void SlowState::SharedDtor() {
}

void SlowState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SlowState::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SlowState& SlowState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_SlowState.base);
  return *internal_default_instance();
}


void SlowState::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SlowState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&slowspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lefttime_) -
      reinterpret_cast<char*>(&slowspeed_)) + sizeof(lefttime_));
  _internal_metadata_.Clear();
}

bool SlowState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SlowState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float SlowSpeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slowspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LeftTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lefttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SlowState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SlowState)
  return false;
#undef DO_
}

void SlowState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SlowState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float SlowSpeed = 2;
  if (this->slowspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->slowspeed(), output);
  }

  // float LeftTime = 3;
  if (this->lefttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lefttime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SlowState)
}

::google::protobuf::uint8* SlowState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SlowState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float SlowSpeed = 2;
  if (this->slowspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->slowspeed(), target);
  }

  // float LeftTime = 3;
  if (this->lefttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lefttime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SlowState)
  return target;
}

size_t SlowState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SlowState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float SlowSpeed = 2;
  if (this->slowspeed() != 0) {
    total_size += 1 + 4;
  }

  // float LeftTime = 3;
  if (this->lefttime() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SlowState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SlowState)
  GOOGLE_DCHECK_NE(&from, this);
  const SlowState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SlowState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SlowState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SlowState)
    MergeFrom(*source);
  }
}

void SlowState::MergeFrom(const SlowState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SlowState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slowspeed() != 0) {
    set_slowspeed(from.slowspeed());
  }
  if (from.lefttime() != 0) {
    set_lefttime(from.lefttime());
  }
}

void SlowState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SlowState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlowState::CopyFrom(const SlowState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SlowState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlowState::IsInitialized() const {
  return true;
}

void SlowState::Swap(SlowState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlowState::InternalSwap(SlowState* other) {
  using std::swap;
  swap(slowspeed_, other->slowspeed_);
  swap(lefttime_, other->lefttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SlowState::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GhostTimer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GhostTimer::kGhostIDFieldNumber;
const int GhostTimer::kLeftTimeFieldNumber;
const int GhostTimer::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GhostTimer::GhostTimer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_GhostTimer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.GhostTimer)
}
GhostTimer::GhostTimer(const GhostTimer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ghostid_, &from.ghostid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&ghostid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.GhostTimer)
}

void GhostTimer::SharedCtor() {
  ::memset(&ghostid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&ghostid_)) + sizeof(type_));
}

GhostTimer::~GhostTimer() {
  // @@protoc_insertion_point(destructor:TCCamp.GhostTimer)
  SharedDtor();
}

void GhostTimer::SharedDtor() {
}

void GhostTimer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GhostTimer::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GhostTimer& GhostTimer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_GhostTimer.base);
  return *internal_default_instance();
}


void GhostTimer::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.GhostTimer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ghostid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&ghostid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool GhostTimer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.GhostTimer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 GhostID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ghostid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LeftTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lefttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.GhostTimer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.GhostTimer)
  return false;
#undef DO_
}

void GhostTimer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.GhostTimer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 GhostID = 1;
  if (this->ghostid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ghostid(), output);
  }

  // float LeftTime = 2;
  if (this->lefttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lefttime(), output);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.GhostTimer)
}

::google::protobuf::uint8* GhostTimer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.GhostTimer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 GhostID = 1;
  if (this->ghostid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ghostid(), target);
  }

  // float LeftTime = 2;
  if (this->lefttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lefttime(), target);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.GhostTimer)
  return target;
}

size_t GhostTimer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.GhostTimer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 GhostID = 1;
  if (this->ghostid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ghostid());
  }

  // float LeftTime = 2;
  if (this->lefttime() != 0) {
    total_size += 1 + 4;
  }

  // int32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GhostTimer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.GhostTimer)
  GOOGLE_DCHECK_NE(&from, this);
  const GhostTimer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GhostTimer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.GhostTimer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.GhostTimer)
    MergeFrom(*source);
  }
}

void GhostTimer::MergeFrom(const GhostTimer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.GhostTimer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ghostid() != 0) {
    set_ghostid(from.ghostid());
  }
  if (from.lefttime() != 0) {
    set_lefttime(from.lefttime());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GhostTimer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.GhostTimer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GhostTimer::CopyFrom(const GhostTimer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.GhostTimer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GhostTimer::IsInitialized() const {
  return true;
}

void GhostTimer::Swap(GhostTimer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GhostTimer::InternalSwap(GhostTimer* other) {
  using std::swap;
  swap(ghostid_, other->ghostid_);
  swap(lefttime_, other->lefttime_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GhostTimer::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelState::InitAsDefaultInstance() {
  ::TCCamp::_LevelState_default_instance_._instance.get_mutable()->playertransform_ = const_cast< ::TCCamp::PosRot*>(
      ::TCCamp::PosRot::internal_default_instance());
  ::TCCamp::_LevelState_default_instance_._instance.get_mutable()->playerslowstate_ = const_cast< ::TCCamp::SlowState*>(
      ::TCCamp::SlowState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelState::kKillGhostFieldNumber;
const int LevelState::kTimeDurationFieldNumber;
const int LevelState::kPlayerTransformFieldNumber;
const int LevelState::kPlayerHPFieldNumber;
const int LevelState::kGhostStateListFieldNumber;
const int LevelState::kTreasureChestStateListFieldNumber;
const int LevelState::kSkillStateListFieldNumber;
const int LevelState::kLightStateListFieldNumber;
const int LevelState::kGhostSendbackAdminFieldNumber;
const int LevelState::kDeactiveTimerID2GhostIDFieldNumber;
const int LevelState::kSponceTimerID2GhostIDFieldNumber;
const int LevelState::kTimerID2TimesFieldNumber;
const int LevelState::kPlayerSlowStateFieldNumber;
const int LevelState::kLevelIDFieldNumber;
const int LevelState::kGhostTimerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelState::LevelState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_LevelState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.LevelState)
}
LevelState::LevelState(const LevelState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ghoststatelist_(from.ghoststatelist_),
      treasurecheststatelist_(from.treasurecheststatelist_),
      skillstatelist_(from.skillstatelist_),
      lightstatelist_(from.lightstatelist_),
      ghostsendbackadmin_(from.ghostsendbackadmin_),
      deactivetimerid2ghostid_(from.deactivetimerid2ghostid_),
      sponcetimerid2ghostid_(from.sponcetimerid2ghostid_),
      timerid2times_(from.timerid2times_),
      ghosttimerlist_(from.ghosttimerlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playertransform()) {
    playertransform_ = new ::TCCamp::PosRot(*from.playertransform_);
  } else {
    playertransform_ = NULL;
  }
  if (from.has_playerslowstate()) {
    playerslowstate_ = new ::TCCamp::SlowState(*from.playerslowstate_);
  } else {
    playerslowstate_ = NULL;
  }
  ::memcpy(&killghost_, &from.killghost_,
    static_cast<size_t>(reinterpret_cast<char*>(&levelid_) -
    reinterpret_cast<char*>(&killghost_)) + sizeof(levelid_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.LevelState)
}

void LevelState::SharedCtor() {
  ::memset(&playertransform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&levelid_) -
      reinterpret_cast<char*>(&playertransform_)) + sizeof(levelid_));
}

LevelState::~LevelState() {
  // @@protoc_insertion_point(destructor:TCCamp.LevelState)
  SharedDtor();
}

void LevelState::SharedDtor() {
  if (this != internal_default_instance()) delete playertransform_;
  if (this != internal_default_instance()) delete playerslowstate_;
}

void LevelState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelState::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelState& LevelState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_LevelState.base);
  return *internal_default_instance();
}


void LevelState::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.LevelState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ghoststatelist_.Clear();
  treasurecheststatelist_.Clear();
  skillstatelist_.Clear();
  lightstatelist_.Clear();
  ghostsendbackadmin_.Clear();
  deactivetimerid2ghostid_.Clear();
  sponcetimerid2ghostid_.Clear();
  timerid2times_.Clear();
  ghosttimerlist_.Clear();
  if (GetArenaNoVirtual() == NULL && playertransform_ != NULL) {
    delete playertransform_;
  }
  playertransform_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerslowstate_ != NULL) {
    delete playerslowstate_;
  }
  playerslowstate_ = NULL;
  ::memset(&killghost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&levelid_) -
      reinterpret_cast<char*>(&killghost_)) + sizeof(levelid_));
  _internal_metadata_.Clear();
}

bool LevelState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.LevelState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 KillGhost = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killghost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float TimeDuration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timeduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.PosRot PlayerTransform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playertransform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PlayerHP = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.GhostState GhostStateList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ghoststatelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.TreasureChestState TreasureChestStateList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_treasurecheststatelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.SkillState SkillStateList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_skillstatelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.LightState LightStateList = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lightstatelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.IntPair GhostSendbackAdmin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ghostsendbackadmin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.IntPair DeactiveTimerID2GhostID = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deactivetimerid2ghostid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.IntPair SponceTimerID2GhostID = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sponcetimerid2ghostid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.TimerID2floatTimes TimerID2Times = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_timerid2times()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.SlowState PlayerSlowState = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerslowstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LevelID = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.GhostTimer GhostTimerList = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ghosttimerlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.LevelState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.LevelState)
  return false;
#undef DO_
}

void LevelState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.LevelState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 KillGhost = 1;
  if (this->killghost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->killghost(), output);
  }

  // float TimeDuration = 2;
  if (this->timeduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->timeduration(), output);
  }

  // .TCCamp.PosRot PlayerTransform = 3;
  if (this->has_playertransform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_playertransform(), output);
  }

  // int32 PlayerHP = 4;
  if (this->playerhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->playerhp(), output);
  }

  // repeated .TCCamp.GhostState GhostStateList = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghoststatelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->ghoststatelist(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.TreasureChestState TreasureChestStateList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treasurecheststatelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->treasurecheststatelist(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.SkillState SkillStateList = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skillstatelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->skillstatelist(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.LightState LightStateList = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lightstatelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->lightstatelist(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.IntPair GhostSendbackAdmin = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghostsendbackadmin_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->ghostsendbackadmin(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.IntPair DeactiveTimerID2GhostID = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deactivetimerid2ghostid_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->deactivetimerid2ghostid(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.IntPair SponceTimerID2GhostID = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sponcetimerid2ghostid_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->sponcetimerid2ghostid(static_cast<int>(i)),
      output);
  }

  // repeated .TCCamp.TimerID2floatTimes TimerID2Times = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timerid2times_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->timerid2times(static_cast<int>(i)),
      output);
  }

  // .TCCamp.SlowState PlayerSlowState = 13;
  if (this->has_playerslowstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_playerslowstate(), output);
  }

  // int32 LevelID = 14;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->levelid(), output);
  }

  // repeated .TCCamp.GhostTimer GhostTimerList = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghosttimerlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->ghosttimerlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.LevelState)
}

::google::protobuf::uint8* LevelState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.LevelState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 KillGhost = 1;
  if (this->killghost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->killghost(), target);
  }

  // float TimeDuration = 2;
  if (this->timeduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->timeduration(), target);
  }

  // .TCCamp.PosRot PlayerTransform = 3;
  if (this->has_playertransform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_playertransform(), deterministic, target);
  }

  // int32 PlayerHP = 4;
  if (this->playerhp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->playerhp(), target);
  }

  // repeated .TCCamp.GhostState GhostStateList = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghoststatelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->ghoststatelist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.TreasureChestState TreasureChestStateList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treasurecheststatelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->treasurecheststatelist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.SkillState SkillStateList = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skillstatelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->skillstatelist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.LightState LightStateList = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lightstatelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->lightstatelist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.IntPair GhostSendbackAdmin = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghostsendbackadmin_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->ghostsendbackadmin(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.IntPair DeactiveTimerID2GhostID = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deactivetimerid2ghostid_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->deactivetimerid2ghostid(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.IntPair SponceTimerID2GhostID = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sponcetimerid2ghostid_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->sponcetimerid2ghostid(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TCCamp.TimerID2floatTimes TimerID2Times = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timerid2times_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->timerid2times(static_cast<int>(i)), deterministic, target);
  }

  // .TCCamp.SlowState PlayerSlowState = 13;
  if (this->has_playerslowstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_playerslowstate(), deterministic, target);
  }

  // int32 LevelID = 14;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->levelid(), target);
  }

  // repeated .TCCamp.GhostTimer GhostTimerList = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ghosttimerlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->ghosttimerlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.LevelState)
  return target;
}

size_t LevelState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.LevelState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.GhostState GhostStateList = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->ghoststatelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ghoststatelist(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.TreasureChestState TreasureChestStateList = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->treasurecheststatelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->treasurecheststatelist(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.SkillState SkillStateList = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->skillstatelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->skillstatelist(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.LightState LightStateList = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->lightstatelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lightstatelist(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.IntPair GhostSendbackAdmin = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->ghostsendbackadmin_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ghostsendbackadmin(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.IntPair DeactiveTimerID2GhostID = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->deactivetimerid2ghostid_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deactivetimerid2ghostid(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.IntPair SponceTimerID2GhostID = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->sponcetimerid2ghostid_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sponcetimerid2ghostid(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.TimerID2floatTimes TimerID2Times = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->timerid2times_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timerid2times(static_cast<int>(i)));
    }
  }

  // repeated .TCCamp.GhostTimer GhostTimerList = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->ghosttimerlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ghosttimerlist(static_cast<int>(i)));
    }
  }

  // .TCCamp.PosRot PlayerTransform = 3;
  if (this->has_playertransform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playertransform_);
  }

  // .TCCamp.SlowState PlayerSlowState = 13;
  if (this->has_playerslowstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerslowstate_);
  }

  // int32 KillGhost = 1;
  if (this->killghost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->killghost());
  }

  // float TimeDuration = 2;
  if (this->timeduration() != 0) {
    total_size += 1 + 4;
  }

  // int32 PlayerHP = 4;
  if (this->playerhp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerhp());
  }

  // int32 LevelID = 14;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.LevelState)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.LevelState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.LevelState)
    MergeFrom(*source);
  }
}

void LevelState::MergeFrom(const LevelState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.LevelState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ghoststatelist_.MergeFrom(from.ghoststatelist_);
  treasurecheststatelist_.MergeFrom(from.treasurecheststatelist_);
  skillstatelist_.MergeFrom(from.skillstatelist_);
  lightstatelist_.MergeFrom(from.lightstatelist_);
  ghostsendbackadmin_.MergeFrom(from.ghostsendbackadmin_);
  deactivetimerid2ghostid_.MergeFrom(from.deactivetimerid2ghostid_);
  sponcetimerid2ghostid_.MergeFrom(from.sponcetimerid2ghostid_);
  timerid2times_.MergeFrom(from.timerid2times_);
  ghosttimerlist_.MergeFrom(from.ghosttimerlist_);
  if (from.has_playertransform()) {
    mutable_playertransform()->::TCCamp::PosRot::MergeFrom(from.playertransform());
  }
  if (from.has_playerslowstate()) {
    mutable_playerslowstate()->::TCCamp::SlowState::MergeFrom(from.playerslowstate());
  }
  if (from.killghost() != 0) {
    set_killghost(from.killghost());
  }
  if (from.timeduration() != 0) {
    set_timeduration(from.timeduration());
  }
  if (from.playerhp() != 0) {
    set_playerhp(from.playerhp());
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
}

void LevelState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.LevelState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelState::CopyFrom(const LevelState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.LevelState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelState::IsInitialized() const {
  return true;
}

void LevelState::Swap(LevelState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelState::InternalSwap(LevelState* other) {
  using std::swap;
  CastToBase(&ghoststatelist_)->InternalSwap(CastToBase(&other->ghoststatelist_));
  CastToBase(&treasurecheststatelist_)->InternalSwap(CastToBase(&other->treasurecheststatelist_));
  CastToBase(&skillstatelist_)->InternalSwap(CastToBase(&other->skillstatelist_));
  CastToBase(&lightstatelist_)->InternalSwap(CastToBase(&other->lightstatelist_));
  CastToBase(&ghostsendbackadmin_)->InternalSwap(CastToBase(&other->ghostsendbackadmin_));
  CastToBase(&deactivetimerid2ghostid_)->InternalSwap(CastToBase(&other->deactivetimerid2ghostid_));
  CastToBase(&sponcetimerid2ghostid_)->InternalSwap(CastToBase(&other->sponcetimerid2ghostid_));
  CastToBase(&timerid2times_)->InternalSwap(CastToBase(&other->timerid2times_));
  CastToBase(&ghosttimerlist_)->InternalSwap(CastToBase(&other->ghosttimerlist_));
  swap(playertransform_, other->playertransform_);
  swap(playerslowstate_, other->playerslowstate_);
  swap(killghost_, other->killghost_);
  swap(timeduration_, other->timeduration_);
  swap(playerhp_, other->playerhp_);
  swap(levelid_, other->levelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelState::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReconnectPkg::InitAsDefaultInstance() {
  ::TCCamp::_ReconnectPkg_default_instance_._instance.get_mutable()->leveldata_ = const_cast< ::TCCamp::LevelDataRsp*>(
      ::TCCamp::LevelDataRsp::internal_default_instance());
  ::TCCamp::_ReconnectPkg_default_instance_._instance.get_mutable()->state_ = const_cast< ::TCCamp::LevelState*>(
      ::TCCamp::LevelState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconnectPkg::kLevelDataFieldNumber;
const int ReconnectPkg::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectPkg::ReconnectPkg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_ReconnectPkg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ReconnectPkg)
}
ReconnectPkg::ReconnectPkg(const ReconnectPkg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_leveldata()) {
    leveldata_ = new ::TCCamp::LevelDataRsp(*from.leveldata_);
  } else {
    leveldata_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::TCCamp::LevelState(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.ReconnectPkg)
}

void ReconnectPkg::SharedCtor() {
  ::memset(&leveldata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&leveldata_)) + sizeof(state_));
}

ReconnectPkg::~ReconnectPkg() {
  // @@protoc_insertion_point(destructor:TCCamp.ReconnectPkg)
  SharedDtor();
}

void ReconnectPkg::SharedDtor() {
  if (this != internal_default_instance()) delete leveldata_;
  if (this != internal_default_instance()) delete state_;
}

void ReconnectPkg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReconnectPkg::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReconnectPkg& ReconnectPkg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_ReconnectPkg.base);
  return *internal_default_instance();
}


void ReconnectPkg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ReconnectPkg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && leveldata_ != NULL) {
    delete leveldata_;
  }
  leveldata_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool ReconnectPkg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ReconnectPkg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.LevelDataRsp LevelData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leveldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.LevelState State = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ReconnectPkg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ReconnectPkg)
  return false;
#undef DO_
}

void ReconnectPkg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ReconnectPkg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.LevelDataRsp LevelData = 1;
  if (this->has_leveldata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_leveldata(), output);
  }

  // .TCCamp.LevelState State = 2;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ReconnectPkg)
}

::google::protobuf::uint8* ReconnectPkg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ReconnectPkg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.LevelDataRsp LevelData = 1;
  if (this->has_leveldata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_leveldata(), deterministic, target);
  }

  // .TCCamp.LevelState State = 2;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_state(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ReconnectPkg)
  return target;
}

size_t ReconnectPkg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ReconnectPkg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.LevelDataRsp LevelData = 1;
  if (this->has_leveldata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *leveldata_);
  }

  // .TCCamp.LevelState State = 2;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconnectPkg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ReconnectPkg)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconnectPkg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectPkg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ReconnectPkg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ReconnectPkg)
    MergeFrom(*source);
  }
}

void ReconnectPkg::MergeFrom(const ReconnectPkg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ReconnectPkg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_leveldata()) {
    mutable_leveldata()->::TCCamp::LevelDataRsp::MergeFrom(from.leveldata());
  }
  if (from.has_state()) {
    mutable_state()->::TCCamp::LevelState::MergeFrom(from.state());
  }
}

void ReconnectPkg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ReconnectPkg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectPkg::CopyFrom(const ReconnectPkg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ReconnectPkg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectPkg::IsInitialized() const {
  return true;
}

void ReconnectPkg::Swap(ReconnectPkg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectPkg::InternalSwap(ReconnectPkg* other) {
  using std::swap;
  swap(leveldata_, other->leveldata_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReconnectPkg::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerSaveFile::InitAsDefaultInstance() {
  ::TCCamp::_ServerSaveFile_default_instance_._instance.get_mutable()->save_ = const_cast< ::TCCamp::LevelState*>(
      ::TCCamp::LevelState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSaveFile::kLevelIDFieldNumber;
const int ServerSaveFile::kSaveFieldNumber;
const int ServerSaveFile::kSpendTimeFieldNumber;
const int ServerSaveFile::kSaveTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSaveFile::ServerSaveFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_level_2eproto::scc_info_ServerSaveFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ServerSaveFile)
}
ServerSaveFile::ServerSaveFile(const ServerSaveFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_save()) {
    save_ = new ::TCCamp::LevelState(*from.save_);
  } else {
    save_ = NULL;
  }
  ::memcpy(&levelid_, &from.levelid_,
    static_cast<size_t>(reinterpret_cast<char*>(&savetime_) -
    reinterpret_cast<char*>(&levelid_)) + sizeof(savetime_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.ServerSaveFile)
}

void ServerSaveFile::SharedCtor() {
  ::memset(&save_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&savetime_) -
      reinterpret_cast<char*>(&save_)) + sizeof(savetime_));
}

ServerSaveFile::~ServerSaveFile() {
  // @@protoc_insertion_point(destructor:TCCamp.ServerSaveFile)
  SharedDtor();
}

void ServerSaveFile::SharedDtor() {
  if (this != internal_default_instance()) delete save_;
}

void ServerSaveFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerSaveFile::descriptor() {
  ::protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSaveFile& ServerSaveFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_level_2eproto::scc_info_ServerSaveFile.base);
  return *internal_default_instance();
}


void ServerSaveFile::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ServerSaveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && save_ != NULL) {
    delete save_;
  }
  save_ = NULL;
  ::memset(&levelid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&savetime_) -
      reinterpret_cast<char*>(&levelid_)) + sizeof(savetime_));
  _internal_metadata_.Clear();
}

bool ServerSaveFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ServerSaveFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 LevelID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.LevelState save = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_save()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SpendTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spendtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 SaveTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &savetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ServerSaveFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ServerSaveFile)
  return false;
#undef DO_
}

void ServerSaveFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ServerSaveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 LevelID = 1;
  if (this->levelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->levelid(), output);
  }

  // .TCCamp.LevelState save = 2;
  if (this->has_save()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_save(), output);
  }

  // int32 SpendTime = 3;
  if (this->spendtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->spendtime(), output);
  }

  // int64 SaveTime = 4;
  if (this->savetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->savetime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ServerSaveFile)
}

::google::protobuf::uint8* ServerSaveFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ServerSaveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 LevelID = 1;
  if (this->levelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->levelid(), target);
  }

  // .TCCamp.LevelState save = 2;
  if (this->has_save()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_save(), deterministic, target);
  }

  // int32 SpendTime = 3;
  if (this->spendtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->spendtime(), target);
  }

  // int64 SaveTime = 4;
  if (this->savetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->savetime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ServerSaveFile)
  return target;
}

size_t ServerSaveFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ServerSaveFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.LevelState save = 2;
  if (this->has_save()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *save_);
  }

  // int32 LevelID = 1;
  if (this->levelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  // int32 SpendTime = 3;
  if (this->spendtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spendtime());
  }

  // int64 SaveTime = 4;
  if (this->savetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->savetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerSaveFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ServerSaveFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSaveFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSaveFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ServerSaveFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ServerSaveFile)
    MergeFrom(*source);
  }
}

void ServerSaveFile::MergeFrom(const ServerSaveFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ServerSaveFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_save()) {
    mutable_save()->::TCCamp::LevelState::MergeFrom(from.save());
  }
  if (from.levelid() != 0) {
    set_levelid(from.levelid());
  }
  if (from.spendtime() != 0) {
    set_spendtime(from.spendtime());
  }
  if (from.savetime() != 0) {
    set_savetime(from.savetime());
  }
}

void ServerSaveFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ServerSaveFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSaveFile::CopyFrom(const ServerSaveFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ServerSaveFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSaveFile::IsInitialized() const {
  return true;
}

void ServerSaveFile::Swap(ServerSaveFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSaveFile::InternalSwap(ServerSaveFile* other) {
  using std::swap;
  swap(save_, other->save_);
  swap(levelid_, other->levelid_);
  swap(spendtime_, other->spendtime_);
  swap(savetime_, other->savetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerSaveFile::GetMetadata() const {
  protobuf_level_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_level_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TCCamp
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelListReq* Arena::CreateMaybeMessage< ::TCCamp::LevelListReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelListItem* Arena::CreateMaybeMessage< ::TCCamp::LevelListItem >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelListItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelListRsp* Arena::CreateMaybeMessage< ::TCCamp::LevelListRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelListRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelDetailReq* Arena::CreateMaybeMessage< ::TCCamp::LevelDetailReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelDetailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelDetailRsp* Arena::CreateMaybeMessage< ::TCCamp::LevelDetailRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelDetailRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::GhostData* Arena::CreateMaybeMessage< ::TCCamp::GhostData >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::GhostData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::TreasureChestData* Arena::CreateMaybeMessage< ::TCCamp::TreasureChestData >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::TreasureChestData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LightData* Arena::CreateMaybeMessage< ::TCCamp::LightData >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LightData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelDataReq* Arena::CreateMaybeMessage< ::TCCamp::LevelDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelDataRsp* Arena::CreateMaybeMessage< ::TCCamp::LevelDataRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelDataRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelStart* Arena::CreateMaybeMessage< ::TCCamp::LevelStart >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelStart >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelSettleReq* Arena::CreateMaybeMessage< ::TCCamp::LevelSettleReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelSettleReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelSettleRsp* Arena::CreateMaybeMessage< ::TCCamp::LevelSettleRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelSettleRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RankReq* Arena::CreateMaybeMessage< ::TCCamp::RankReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RankReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RankItem* Arena::CreateMaybeMessage< ::TCCamp::RankItem >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RankItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RankRsp* Arena::CreateMaybeMessage< ::TCCamp::RankRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RankRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PosRot* Arena::CreateMaybeMessage< ::TCCamp::PosRot >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PosRot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::GhostState* Arena::CreateMaybeMessage< ::TCCamp::GhostState >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::GhostState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::IntPair* Arena::CreateMaybeMessage< ::TCCamp::IntPair >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::IntPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::TimerID2floatTimes* Arena::CreateMaybeMessage< ::TCCamp::TimerID2floatTimes >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::TimerID2floatTimes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::TreasureChestState* Arena::CreateMaybeMessage< ::TCCamp::TreasureChestState >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::TreasureChestState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LightState* Arena::CreateMaybeMessage< ::TCCamp::LightState >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LightState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SkillState* Arena::CreateMaybeMessage< ::TCCamp::SkillState >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SkillState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SlowState* Arena::CreateMaybeMessage< ::TCCamp::SlowState >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SlowState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::GhostTimer* Arena::CreateMaybeMessage< ::TCCamp::GhostTimer >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::GhostTimer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::LevelState* Arena::CreateMaybeMessage< ::TCCamp::LevelState >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::LevelState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ReconnectPkg* Arena::CreateMaybeMessage< ::TCCamp::ReconnectPkg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ReconnectPkg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ServerSaveFile* Arena::CreateMaybeMessage< ::TCCamp::ServerSaveFile >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ServerSaveFile >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
